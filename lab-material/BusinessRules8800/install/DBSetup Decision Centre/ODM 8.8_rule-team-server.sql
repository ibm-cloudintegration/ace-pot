CREATE SEQUENCE IIBADMIN.BASELINEDEPENDENCYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.BASELINEDEPENDENCY (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), PROJECTFROM VARCHAR(255) NOT NULL, BASELINEFROM VARCHAR(255) NOT
     NULL, PROJECTTO VARCHAR(255) NOT NULL, BASELINETO VARCHAR(255) NOT NULL,
     CONSTRAINT PRJTFROMTOUNIQUE UNIQUE (PROJECTFROM, BASELINEFROM, PROJECTTO))
     ;
CREATE TABLE IIBADMIN.ALGORITHMKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.ALGORITHMKIND (VALUE, DEPRECATED) VALUES ('default', 'F')
     ;
INSERT INTO IIBADMIN.ALGORITHMKIND (VALUE, DEPRECATED) VALUES ('sequential',
     'F') ;
CREATE TABLE IIBADMIN.BASELINEKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Null', 'F') ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Standard', 'F')
     ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Deployment',
     'F') ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Branch', 'F') ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Migrated', 'F')
     ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('RecycleBin',
     'F') ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Phantom', 'F') ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Temporary', 'F')
     ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('DsDeployment',
     'F') ;
INSERT INTO IIBADMIN.BASELINEKIND (VALUE, DEPRECATED) VALUES ('Internal', 'F')
     ;
CREATE TABLE IIBADMIN.DEPLOYMENTVERSIONNINGKIND (VALUE VARCHAR(30) NOT NULL,
     PRIMARY KEY (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.DEPLOYMENTVERSIONNINGKIND (VALUE, DEPRECATED) VALUES
     ('NO_CHANGE', 'F') ;
INSERT INTO IIBADMIN.DEPLOYMENTVERSIONNINGKIND (VALUE, DEPRECATED) VALUES
     ('MANUAL', 'F') ;
INSERT INTO IIBADMIN.DEPLOYMENTVERSIONNINGKIND (VALUE, DEPRECATED) VALUES
     ('INCREMENT_MINOR', 'F') ;
INSERT INTO IIBADMIN.DEPLOYMENTVERSIONNINGKIND (VALUE, DEPRECATED) VALUES
     ('INCREMENT_MAJOR', 'F') ;
INSERT INTO IIBADMIN.DEPLOYMENTVERSIONNINGKIND (VALUE, DEPRECATED) VALUES
     ('RESET', 'F') ;
CREATE TABLE IIBADMIN.DIRECTIONKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.DIRECTIONKIND (VALUE, DEPRECATED) VALUES ('IN', 'F') ;
INSERT INTO IIBADMIN.DIRECTIONKIND (VALUE, DEPRECATED) VALUES ('OUT', 'F') ;
INSERT INTO IIBADMIN.DIRECTIONKIND (VALUE, DEPRECATED) VALUES ('INOUT', 'F') ;
CREATE TABLE IIBADMIN.EXITCRITERIAKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.EXITCRITERIAKIND (VALUE, DEPRECATED) VALUES ('none', 'F')
     ;
INSERT INTO IIBADMIN.EXITCRITERIAKIND (VALUE, DEPRECATED) VALUES ('rule', 'F')
     ;
INSERT INTO IIBADMIN.EXITCRITERIAKIND (VALUE, DEPRECATED) VALUES
     ('ruleinstance', 'F') ;
CREATE TABLE IIBADMIN.INPUTKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.INPUTKIND (VALUE, DEPRECATED) VALUES ('DataProvider', 'F')
     ;
INSERT INTO IIBADMIN.INPUTKIND (VALUE, DEPRECATED) VALUES ('ExcelFile', 'F') ;
CREATE TABLE IIBADMIN.METRICKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.METRICKIND (VALUE, DEPRECATED) VALUES ('Numeric', 'F') ;
INSERT INTO IIBADMIN.METRICKIND (VALUE, DEPRECATED) VALUES ('DateTime', 'F') ;
INSERT INTO IIBADMIN.METRICKIND (VALUE, DEPRECATED) VALUES ('Boolean', 'F') ;
INSERT INTO IIBADMIN.METRICKIND (VALUE, DEPRECATED) VALUES ('String', 'F') ;
INSERT INTO IIBADMIN.METRICKIND (VALUE, DEPRECATED) VALUES ('Domain', 'F') ;
CREATE TABLE IIBADMIN.NAMEDCONSTANTTYPE (VALUE VARCHAR(30) NOT NULL, PRIMARY
     KEY (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.NAMEDCONSTANTTYPE (VALUE, DEPRECATED) VALUES
     ('Unspecified', 'F') ;
INSERT INTO IIBADMIN.NAMEDCONSTANTTYPE (VALUE, DEPRECATED) VALUES ('String',
     'F') ;
INSERT INTO IIBADMIN.NAMEDCONSTANTTYPE (VALUE, DEPRECATED) VALUES ('Integer',
     'F') ;
INSERT INTO IIBADMIN.NAMEDCONSTANTTYPE (VALUE, DEPRECATED) VALUES ('Real', 'F')
     ;
INSERT INTO IIBADMIN.NAMEDCONSTANTTYPE (VALUE, DEPRECATED) VALUES ('DateTime',
     'F') ;
INSERT INTO IIBADMIN.NAMEDCONSTANTTYPE (VALUE, DEPRECATED) VALUES ('Boolean',
     'F') ;
CREATE TABLE IIBADMIN.ORDERINGKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.ORDERINGKIND (VALUE, DEPRECATED) VALUES ('default', 'F') ;
INSERT INTO IIBADMIN.ORDERINGKIND (VALUE, DEPRECATED) VALUES ('literal', 'F') ;
INSERT INTO IIBADMIN.ORDERINGKIND (VALUE, DEPRECATED) VALUES ('sorted', 'F') ;
CREATE TABLE IIBADMIN.PACKAGEKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Rule', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Template', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Query', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Resource', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('BOM', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Testing', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('EventArtifact',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('EventObject',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('ActionObject',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('BusinessObject',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('NamedConstant',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Event', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Action', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('File', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('DataConnection',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('EventFlow', 'F')
     ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Chart', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Operation', 'F')
     ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Deployment', 'F')
     ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES
     ('DSDeploymentReport', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('TestSuite', 'F')
     ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('TestReport', 'F')
     ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('TestCase', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('Metric', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('KPI', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('InputData', 'F')
     ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES ('SimulationModel',
     'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES
     ('SimulationConfiguration', 'F') ;
INSERT INTO IIBADMIN.PACKAGEKIND (VALUE, DEPRECATED) VALUES
     ('SimulationReport', 'F') ;
CREATE TABLE IIBADMIN.REPORTSTATUSKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('STARTING',
     'F') ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('STARTED',
     'F') ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('STOPPING',
     'F') ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('STOPPED',
     'F') ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('FAILED',
     'F') ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('COMPLETED',
     'F') ;
INSERT INTO IIBADMIN.REPORTSTATUSKIND (VALUE, DEPRECATED) VALUES ('ABORTED',
     'F') ;
CREATE TABLE IIBADMIN.SECURITYPROFILEKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY
     KEY (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.SECURITYPROFILEKIND (VALUE, DEPRECATED) VALUES
     ('READONLY', 'F') ;
INSERT INTO IIBADMIN.SECURITYPROFILEKIND (VALUE, DEPRECATED) VALUES
     ('FULLACCESS', 'F') ;
INSERT INTO IIBADMIN.SECURITYPROFILEKIND (VALUE, DEPRECATED) VALUES ('CUSTOM',
     'F') ;
INSERT INTO IIBADMIN.SECURITYPROFILEKIND (VALUE, DEPRECATED) VALUES
     ('NOACCESS', 'F') ;
CREATE TABLE IIBADMIN.SERVERKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.SERVERKIND (VALUE, DEPRECATED) VALUES ('RES', 'F') ;
INSERT INTO IIBADMIN.SERVERKIND (VALUE, DEPRECATED) VALUES ('RSO', 'F') ;
INSERT INTO IIBADMIN.SERVERKIND (VALUE, DEPRECATED) VALUES ('EVENT', 'F') ;
INSERT INTO IIBADMIN.SERVERKIND (VALUE, DEPRECATED) VALUES ('DECISION_RUNNER',
     'F') ;
CREATE TABLE IIBADMIN.SNAPSHOTCREATIONKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY
     KEY (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.SNAPSHOTCREATIONKIND (VALUE, DEPRECATED) VALUES ('ALWAYS',
     'F') ;
INSERT INTO IIBADMIN.SNAPSHOTCREATIONKIND (VALUE, DEPRECATED) VALUES
     ('USEROPTION', 'F') ;
INSERT INTO IIBADMIN.SNAPSHOTCREATIONKIND (VALUE, DEPRECATED) VALUES ('NEVER',
     'F') ;
CREATE TABLE IIBADMIN.STATUS (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY (VALUE),
     DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.STATUS (VALUE, DEPRECATED) VALUES ('new', 'F') ;
INSERT INTO IIBADMIN.STATUS (VALUE, DEPRECATED) VALUES ('defined', 'F') ;
INSERT INTO IIBADMIN.STATUS (VALUE, DEPRECATED) VALUES ('validated', 'F') ;
INSERT INTO IIBADMIN.STATUS (VALUE, DEPRECATED) VALUES ('rejected', 'F') ;
INSERT INTO IIBADMIN.STATUS (VALUE, DEPRECATED) VALUES ('deployable', 'F') ;
CREATE TABLE IIBADMIN.UPDATETYPEKIND (VALUE VARCHAR(30) NOT NULL, PRIMARY KEY
     (VALUE), DEPRECATED CHAR(1))  ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('Create', 'F')
     ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('Update', 'F')
     ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('BranchCreate',
     'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('SnapshotCreate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('SnapshotRestore', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('Delete', 'F')
     ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('Rename', 'F')
     ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('BranchUpdate',
     'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES ('BranchRename',
     'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('SnapshotUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('SnapshotRename', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DecisionServiceCreate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ReleaseDeploy', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ReleaseUndeploy', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityCreate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityCancel', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityRename', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityOwnerAssign', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityApproverAssign', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityApproverRemove', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityStatusUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityApprove', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityReject', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityGoalUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityDueDateUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityAuthorComplete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityAuthorAssign', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityAuthorRemove', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityTesterComplete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityTesterAssign', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityTesterRemove', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityTestPlanUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityReopen', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityClose', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityDelete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityMerge', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityAuthorResume', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('ActivityTesterResume', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestSuiteCreate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestSuiteUpdateMulti', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestSuiteUpdateSingle', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestSuiteRename', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestSuiteDelete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestCaseUpload', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestCaseDelete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('TestReportMerge', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DConfigCreate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DConfigUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DConfigRename', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DConfigDelete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DReportCreate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DReportUpdate', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DReportDelete', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DeploymentStarted', 'F') ;
INSERT INTO IIBADMIN.UPDATETYPEKIND (VALUE, DEPRECATED) VALUES
     ('DeploymentComplete', 'F') ;
CREATE SEQUENCE IIBADMIN.GROUPIDENTITITY ORDER ;
CREATE TABLE IIBADMIN.ILRGROUP (ID INTEGER NOT NULL, PRIMARY KEY (ID), NAME
     VARCHAR(255))  ;
CREATE SEQUENCE IIBADMIN.METAMODELIDENTITY ORDER ;
CREATE TABLE IIBADMIN.METAMODEL (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     VARCHAR(255))  ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(1, 'brm.Query') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(2, 'brm.Element') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(3, 'brm.BasicModelElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(4, 'brm.PackageElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(5, 'brm.RulePackage') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(6, 'brm.Hierarchy') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(7, 'brm.BasicLock') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(8, 'brm.Lock') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(9, 'brm.ActivityLock') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(10, 'brm.SystemLock') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(11, 'brm.ModelElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(12, 'brm.ProjectElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(13, 'brm.AbstractQuery') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(14, 'brm.Baseline') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(15, 'brm.ReferencingBsln') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(16, 'brm.TimestampBsln') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(17, 'brm.Branch') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(18, 'brm.Snapshot') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(19, 'brm.ManagedBranch') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(20, 'brm.Activity') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(21, 'brm.ChangeAct') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(22, 'brm.ValidationAct') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(23, 'brm.Release') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(24, 'brm.RuleArtifact') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(25, 'brm.SmartView') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(26, 'brm.BOM') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(27, 'brm.BusinessRule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(28, 'brm.DecisionTable') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(29, 'brm.DecisionTree') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(30, 'brm.Definition') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(31, 'brm.Template') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(32, 'brm.BRLRule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(33, 'brm.Tag') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(34, 'brm.Vocabulary') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(35, 'brm.Proxy') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(36, 'brm.TechnicalRule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(37, 'brm.Function') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(38, 'brm.TypedElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(39, 'brm.Variable') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(40, 'brm.Parameter') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(41, 'brm.VariableSet') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(42, 'brm.Extractor') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(43, 'brm.Rule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(44, 'brm.InitialValue') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(45, 'brm.ProjectInfo') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(46, 'brm.RuleProject') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(47, 'brm.BOMPathEntry') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(48, 'brm.Task') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(49, 'brm.FunctionTask') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(50, 'brm.RuleTask') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(51, 'brm.Ruleflow') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(52, 'brm.ProjectBOMEntry') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(53, 'brm.BOMEntry') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(54, 'brm.Dependency') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(55, 'brm.MessageMap') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(56, 'brm.ActionRule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(57, 'brm.RuleApp') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(58, 'brm.Ruleset') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(59, 'brm.UserSetting') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(60, 'brm.ScopeElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(61, 'brm.RuleAppProperty') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(62, 'brm.RuleArtifactTag') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(63, 'brm.BOM2XOMMapping') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(64, 'brm.RulesetProperty') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(65, 'brm.OverriddenRule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(66, 'brm.RuleProjectTag') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(67, 'brm.Argument') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(68, 'brm.RuleflowTag') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(69, 'brm.Schema') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(70, 'brm.Simulation') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(71, 'brm.ScenarioSuite') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(72, 'brm.ScenarioSuiteReport')
     ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(73, 'brm.TestSuite') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(74, 'brm.Server') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(75,
     'brm.ScenarioSuiteResource') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(76, 'brm.ScenarioTestReport') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(77,
     'brm.ScenarioSuiteKPIReport') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(78, 'brm.TestReport') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(79, 'brm.ConnectionEntry') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(80, 'brm.Resource') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(81, 'brm.EventElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(82, 'brm.EventArtifact') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(83, 'brm.Filter') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(84, 'brm.EventRuleArtifact') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(85, 'brm.EventRule') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(86, 'brm.EventRuleGroup') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(87, 'brm.NamedConstant') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(88, 'brm.EventObjectArtifact')
     ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(89, 'brm.BusinessObject') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(90, 'brm.EventObject') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(91, 'brm.ActionObject') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(92, 'brm.Action') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(93, 'brm.Event') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(94, 'brm.EventFlow') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(95, 'brm.DataConnection') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(96, 'brm.File') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(97, 'brm.Chart') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(98, 'brm.MergeReport') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(99, 'brm.ActivityComment') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(100,
     'brm.ActivityCommentAttachment') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(101,
     'brm.ActivityCommentAccess') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(102, 'brm.ActivityCommentLink')
     ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(103,
     'brm.ActivityCommentEvent') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(104,
     'brm.ActivitySubscription') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(105, 'brm.ActivityUserComment')
     ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(106, 'brm.Profile') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(107, 'dsm.Operation') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(108, 'dsm.OperationTag') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(109, 'dsm.OperationVariable') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(110, 'dsm.Deployment') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(111, 'dsm.DepGroup') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(112, 'dsm.DepOperation') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(113, 'dsm.DepPropertyTag') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(114,
     'dsm.DepOperationProperty') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(115, 'dsm.DepTarget') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(116, 'dsm.DepVersionPolicy') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(117, 'dsm.DsDeploymentBsln') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(118, 'dsm.DSDeploymentReport')
     ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(119,
     'dsm.OperationDeployedVersion') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(120,
     'dsm.OperationLatestDeployedVersion') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(121,
     'dsm.OperationNewDeployedVersion') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(122, 'dsm.DeploymentError') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(123, 'validation.Metric') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(124, 'validation.KPI') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(125,
     'validation.SimulationModel') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(126, 'validation.InputData') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(127,
     'validation.SimulationReport') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(128,
     'validation.SimulationConfiguration') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(129,
     'validation.ValidationElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(130,
     'validation.SimulationElement') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(131, 'validation.TestSuite') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(132, 'validation.TestElement')
     ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(133, 'validation.TestReport') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(134,
     'validation.TestCaseResource') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(135, 'validation.TestCase') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(136, 'validation.TestDetail') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(137,
     'validation.TestOperationInfo') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(138,
     'validation.ReportOperationInfo') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(139,
     'validation.ReportTestSuiteInfo') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(140, 'admin.User') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(141, 'admin.SecurityGroup') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(142, 'admin.LdapConnection') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(143, 'admin.LdapProperty') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(144, 'admin.SecurityRole') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(145, 'admin.UserProperty') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(146, 'admin.UserGroup') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(147, 'admin.GroupRole') ;
INSERT INTO IIBADMIN.METAMODEL (ID, type)VALUES(148, 'admin.GroupUser') ;
CREATE SEQUENCE IIBADMIN.LDAPCONNECTIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.LDAPCONNECTION (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT LDAPCONN_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, GROUPNAMEATTRIBUTE VARCHAR(750),
     GROUPSEARCHBASE VARCHAR(750), GROUPSEARCHFILTER CLOB(52428800), LDAPURL
     VARCHAR(750), SEARCHCONNECTIONDN VARCHAR(750), SEARCHCONNECTIONPASSWORD
     VARCHAR(255), USEREMAILATTRIBUTE VARCHAR(255), USERNAMEATTRIBUTE
     VARCHAR(255), CREATEDBY VARCHAR(100), CREATEDON TIMESTAMP, LASTCHANGEDBY
     VARCHAR(100), LASTCHANGEDON TIMESTAMP, NAME VARCHAR(255) NOT NULL, UUID
     VARCHAR(46) NOT NULL)  ;
CREATE UNIQUE INDEX IIBADMIN.LDAPCOUUIDUNIQ ON IIBADMIN.LDAPCONNECTION (UUID) ;
CREATE SEQUENCE IIBADMIN.LDAPPROPERTYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.LDAPPROPERTY (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT LDAPPROP_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     LDAPPROP_LDAPCONN FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.LDAPCONNECTION ON DELETE CASCADE, NAME VARCHAR(255) NOT NULL,
     VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.LDAPPROP_CONTAINE ON IIBADMIN.LDAPPROPERTY (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.PROFILEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.PROFILE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT PROFILE_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, PICTURE BLOB(52428800), USERID
     VARCHAR(100))  ;
CREATE SEQUENCE IIBADMIN.PROXYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.PROXY (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT PROXY_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, DESTNAME VARCHAR(255), DESTUUID VARCHAR(46), REFERENCE
     VARCHAR(255), SOURCEUUID VARCHAR(46))  ;
CREATE SEQUENCE IIBADMIN.RULEAPPIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEAPP (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULEAPP_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CREATEDBY VARCHAR(100), CREATEDON
     TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, DEPLOYEDBASELINES
     CLOB(52428800), DESCRIPTION VARCHAR(255), DISPLAYNAME VARCHAR(255), MAJOR
     INTEGER, MINOR INTEGER)  ;
CREATE UNIQUE INDEX IIBADMIN.RULEAPPNAMEUNIQUE ON IIBADMIN.RULEAPP (NAME,
     MAJOR, MINOR) ;
CREATE UNIQUE INDEX IIBADMIN.RULEAPPUUIDUNIQUE ON IIBADMIN.RULEAPP (UUID) ;
INSERT INTO IIBADMIN.RULEAPP (ID, TYPE, NAME, UUID) VALUES (2147483647, 1,
     'Dummy record for internal purposes.', '.') ;
CREATE SEQUENCE IIBADMIN.RULEAPPPROPERTYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEAPPPROPERTY (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT RULEAPPP_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     RULEAPPP_RULEAPP FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.RULEAPP ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULEAPPP_CONTAINE ON IIBADMIN.RULEAPPPROPERTY (CONTAINER)
     ;
CREATE UNIQUE INDEX IIBADMIN.RULEAPNAMEUNIQ ON IIBADMIN.RULEAPPPROPERTY
     (CONTAINER, NAME) ;
CREATE SEQUENCE IIBADMIN.RULEPROJECTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEPROJECT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULEPROJ_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CREATEDBY VARCHAR(100), CREATEDON
     TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, ADVANCEDPROPERTIES
     CLOB(52428800), DECISIONSERVICE CHAR(1) NOT NULL, DESCRIPTION
     CLOB(52428800), PLATFORM VARCHAR(30), VERSION INTEGER NOT NULL, CONSTRAINT
     RULEPRNAMEUNIQ UNIQUE (NAME))  ;
CREATE UNIQUE INDEX IIBADMIN.RULEPRUUIDUNIQ ON IIBADMIN.RULEPROJECT (UUID) ;
INSERT INTO IIBADMIN.RULEPROJECT (ID, TYPE, NAME, UUID, DECISIONSERVICE,
     VERSION) VALUES (2147483647, 1, 'Dummy record for internal purposes.',
     '.', 'F', 0) ;
CREATE TABLE IIBADMIN.BRSTUDIO (UUID VARCHAR(46) NOT NULL, PROJECT INTEGER NOT
     NULL, ELTORIGINALID INTEGER NOT NULL, TYPE INTEGER NOT NULL, PRIMARY KEY
     (UUID), CONSTRAINT BRSTUDIO_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, CONSTRAINT BRSTUDIO_METAMODEL
     FOREIGN KEY (TYPE) REFERENCES IIBADMIN.METAMODEL)  ;
CREATE SEQUENCE IIBADMIN.CONNECTIONENTRYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.CONNECTIONENTRY (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT CONNECTI_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, BASETYPE VARCHAR(255), BRANCH VARCHAR(30),
     ENTRYTYPE VARCHAR(255), LOCALCHECKSUM VARCHAR(100), QUALIFIEDNAME
     CLOB(52428800), REMOTECHECKSUM VARCHAR(100), URL CLOB(52428800), UUID
     VARCHAR(46), CONTAINER INTEGER NOT NULL, CONSTRAINT CONNECTI_RULEPROJ
     FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE)
     ;
CREATE INDEX IIBADMIN.CONNECTI_CONTAINE ON IIBADMIN.CONNECTIONENTRY (CONTAINER)
     ;
CREATE SEQUENCE IIBADMIN.MERGEREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.MERGEREPORT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT MERGEREP_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CREATEDBY VARCHAR(100), CREATEDON
     TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP, PROJECT
     INTEGER NOT NULL, CONSTRAINT MERGEREP_RULEPROJ FOREIGN KEY (PROJECT)
     REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE, SOURCEBRANCH
     VARCHAR(255) NOT NULL, TARGETBRANCH VARCHAR(255) NOT NULL, VALUE
     BLOB(52428800), NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL)  ;
CREATE UNIQUE INDEX IIBADMIN.MERGERUUIDUNIQ ON IIBADMIN.MERGEREPORT (UUID) ;
CREATE SEQUENCE IIBADMIN.RULESETIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULESET (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULESET_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     RULESET_RULEAPP FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.RULEAPP ON
     DELETE CASCADE, BASELINE VARCHAR(255) NOT NULL, ILRDEBUG CHAR(1),
     DESCRIPTION VARCHAR(255), DISPLAYNAME VARCHAR(255), ENABLED CHAR(1),
     EXTRACTOR VARCHAR(255), MAJOR INTEGER, MINOR INTEGER, NAME VARCHAR(255)
     NOT NULL, PROJECT VARCHAR(255) NOT NULL, RULESETPROPERTIES CLOB(52428800),
     URL CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULESET_CONTAINER ON IIBADMIN.RULESET (CONTAINER) ;
INSERT INTO IIBADMIN.RULESET (ID, TYPE, NAME, CONTAINER, PROJECT, BASELINE)
     VALUES (2147483647, 1, 'Dummy record for internal purposes.', 2147483647,
     '.', '.') ;
CREATE SEQUENCE IIBADMIN.BASELINEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.BASELINE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT BSLN_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, LFT INTEGER NOT NULL, RGT INTEGER NOT NULL, AUTHORS
     CLOB(52428800), BASELINEKIND VARCHAR(30) NOT NULL, CONSTRAINT
     BASELINEKINDREF FOREIGN KEY (BASELINEKIND) REFERENCES
     IIBADMIN.BASELINEKIND, DEPNAME VARCHAR(255), DOCUMENTATION CLOB(52428800),
     EVENTIDSTRING VARCHAR(50), FROZEN CHAR(1), PARENT INTEGER, CONSTRAINT
     BSLN_PARENT FOREIGN KEY (PARENT) REFERENCES IIBADMIN.BASELINE ON DELETE
     CASCADE, READABLEVERSION INTEGER NOT NULL, CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP,
     GROUPS CLOB(52428800), SECURITYENFORCED CHAR(1) NOT NULL,
     SECURITYINHERITED CHAR(1) NOT NULL, APPROVERS CLOB(52428800), OWNER
     VARCHAR(100) NOT NULL, STATUS VARCHAR(50) NOT NULL, TARGETDATE TIMESTAMP,
     NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, RULEAPP INTEGER,
     RULESET INTEGER, CONTAINER INTEGER NOT NULL, CONSTRAINT BSLN_RULEPROJECT
     FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE,
     MAXVERSIONID INTEGER NOT NULL, DEPLOYMENTID VARCHAR(30))  ;
CREATE INDEX IIBADMIN.BSLN_CONTAINER ON IIBADMIN.BASELINE (CONTAINER) ;
CREATE UNIQUE INDEX IIBADMIN.BSLNNAMEUNIQUE ON IIBADMIN.BASELINE (NAME,
     CONTAINER, PARENT, RULEAPP, RULESET) ;
CREATE UNIQUE INDEX IIBADMIN.BSLNUUIDUNIQUE ON IIBADMIN.BASELINE (UUID) ;
INSERT INTO IIBADMIN.BASELINE (ID, TYPE, LFT, RGT, UUID, CONTAINER,
     MAXVERSIONID, NAME, READABLEVERSION, BASELINEKIND, SECURITYINHERITED,
     SECURITYENFORCED, STATUS, OWNER) VALUES (2147483647, 1, 0, 0, '.',
     2147483647, 0, 'Dummy record for internal purposes.', 0, 'Null', 'T', 'F',
     '.', '.') ;
CREATE INDEX IIBADMIN.BASELINEDATEIDX ON IIBADMIN.BASELINE (LASTCHANGEDON) ;
CREATE INDEX IIBADMIN.BASELINEPARENTIDX ON IIBADMIN.BASELINE (PARENT, TYPE) ;
CREATE SEQUENCE IIBADMIN.PROJECTINFOIDENTITY ORDER ;
CREATE TABLE IIBADMIN.PROJECTINFO (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT PROJECTI_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, BASELINE INTEGER, CONSTRAINT
     PROJECTINFO_BSLN FOREIGN KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON
     DELETE CASCADE, BUILDMODE VARCHAR(30), CATEGORIES CLOB(52428800),
     CONFIGFILE CLOB(52428800), DECISIONSERVICE CHAR(1) NOT NULL, DYNAMICXOM
     CLOB(52428800), MIGRATEDTOOPERATIONID VARCHAR(46), MIGRATIONFLAG INTEGER
     NOT NULL, PROJECT INTEGER, CONSTRAINT PROJECTI_RULEPROJ FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE)  ;
CREATE SEQUENCE IIBADMIN.DEPENDENCYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPENDENCY (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT DEPENDEN_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, BASELINENAME VARCHAR(255), PROJECTNAME
     VARCHAR(255), CONTAINER INTEGER NOT NULL, CONSTRAINT DEPENDEN_PROJECTI
     FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.PROJECTINFO ON DELETE CASCADE)
     ;
CREATE INDEX IIBADMIN.DEPENDEN_CONTAINE ON IIBADMIN.DEPENDENCY (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.MESSAGEMAPIDENTITY ORDER ;
CREATE TABLE IIBADMIN.MESSAGEMAP (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT MESSAGEM_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, BODY CLOB(52428800), LOCALE VARCHAR(30),
     CONTAINER INTEGER NOT NULL, CONSTRAINT MESSAGEM_PROJECTI FOREIGN KEY
     (CONTAINER) REFERENCES IIBADMIN.PROJECTINFO ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.MESSAGEM_CONTAINE ON IIBADMIN.MESSAGEMAP (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.PARAMETERIDENTITY ORDER ;
CREATE TABLE IIBADMIN.PARAMETER (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT PARAMETE_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, DIRECTION VARCHAR(30) NOT NULL, CONSTRAINT
     PARAMETE_DIRECTIO FOREIGN KEY (DIRECTION) REFERENCES
     IIBADMIN.DIRECTIONKIND, ILRORDER INTEGER NOT NULL, CONTAINER INTEGER NOT
     NULL, CONSTRAINT PARAMETE_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.PROJECTINFO ON DELETE CASCADE, BOMTYPE CLOB(52428800) NOT NULL,
     INITIALVALUE CLOB(52428800), NAME VARCHAR(255) NOT NULL, VERBALIZATION
     CLOB(52428800))  ;
CREATE INDEX IIBADMIN.PARAMETE_CONTAINE ON IIBADMIN.PARAMETER (CONTAINER) ;
CREATE UNIQUE INDEX IIBADMIN.PARAMETERNAMEUNIQ ON IIBADMIN.PARAMETER (NAME,
     CONTAINER) ;
CREATE UNIQUE INDEX IIBADMIN.PRJINFOBSLNIDX ON IIBADMIN.PROJECTINFO (BASELINE)
     ;
CREATE SEQUENCE IIBADMIN.RTSSCHEMAIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RTSSCHEMA (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RTSSCHEM_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     RTSSCHEM_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.PROJECTINFO
     ON DELETE CASCADE, BODY CLOB(52428800), LOCATION CLOB(52428800), NAMESPACE
     CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RTSSCHEM_CONTAINE ON IIBADMIN.RTSSCHEMA (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.RULEPROJECTTAGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEPROJECTTAG (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT RULEPRJTG_METAMODL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     RLPRJTAG_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.PROJECTINFO
     ON DELETE CASCADE, NAME VARCHAR(255) NOT NULL, VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RLPRJTAG_CONTAINER ON IIBADMIN.RULEPROJECTTAG (CONTAINER)
     ;
CREATE UNIQUE INDEX IIBADMIN.RLPRJTAGNAMEUNIQUE ON IIBADMIN.RULEPROJECTTAG
     (CONTAINER, NAME) ;
CREATE SEQUENCE IIBADMIN.RULESETPROPERTYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULESETPROPERTY (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT RULESETP_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     RULESETP_PROJECTI FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.PROJECTINFO
     ON DELETE CASCADE, ILRKEY CLOB(52428800), VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULESETP_CONTAINE ON IIBADMIN.RULESETPROPERTY (CONTAINER)
     ;
CREATE SEQUENCE IIBADMIN.SCENARIOSUITEREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SCENARIOSUITEREPORT (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT SCENARIO_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, CREATEDBY VARCHAR(100), CREATEDON
     TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, ARCHIVEERRORS CHAR(1),
     ARCHIVEWARNINGS CHAR(1), BRANCH INTEGER NOT NULL, CONSTRAINT SCENARIO_BSLN
     FOREIGN KEY (BRANCH) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     EXECUTEDBY VARCHAR(255), NBERRORS INTEGER NOT NULL, NBFAILURES INTEGER NOT
     NULL, NBSCENARIOS INTEGER NOT NULL, OPTIONS CLOB(255), PROJECT INTEGER NOT
     NULL, CONSTRAINT SCENARIO_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, RUNBASELINE VARCHAR(255) NOT NULL,
     SCENARIOSUITEFQN VARCHAR(255) NOT NULL, SCENARIOSUITEID INTEGER NOT NULL,
     SCENARIOSUITEOID INTEGER NOT NULL, SERVERNAME VARCHAR(255) NOT NULL)  ;
CREATE UNIQUE INDEX IIBADMIN.SCENARNAMEUNIQ ON IIBADMIN.SCENARIOSUITEREPORT
     (NAME, SCENARIOSUITEFQN, SCENARIOSUITEOID, PROJECT, BRANCH) ;
CREATE UNIQUE INDEX IIBADMIN.SCENARUUIDUNIQ ON IIBADMIN.SCENARIOSUITEREPORT
     (UUID) ;
CREATE SEQUENCE IIBADMIN.SCENARIOSUITEKPIREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SCENARIOSUITEKPIREPORT (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT SCSUITEK_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, DATA BLOB(52428800), ILRINDEX
     INTEGER NOT NULL, KPICLASSNAME VARCHAR(255) NOT NULL, KPIRESULTCLASSNAME
     VARCHAR(255) NOT NULL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     SCSUITEK_SCENARIO FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.SCENARIOSUITEREPORT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.SCSUITEK_CONTAINE ON IIBADMIN.SCENARIOSUITEKPIREPORT
     (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.SCENARIOTESTREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SCENARIOTESTREPORT (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT SCTSTRPR_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL,
     CONSTRAINT SCTSTRPR_SCENARIO FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.SCENARIOSUITEREPORT ON DELETE CASCADE, ERRORCAUSE CLOB(52428800),
     ERRORMESSAGE CLOB(52428800), EXECUTIONID VARCHAR(255), ILRINDEX INTEGER
     NOT NULL, NAME CLOB(52428800) NOT NULL, NBERRORS INTEGER NOT NULL,
     NBFAILURES INTEGER NOT NULL, NBTESTS INTEGER NOT NULL, STATUS VARCHAR(255)
     NOT NULL)  ;
CREATE INDEX IIBADMIN.SCTSTRPR_CONTAINE ON IIBADMIN.SCENARIOTESTREPORT
     (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.SECGRPIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SECGRP (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT SECGRP_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, DESCRIPTION CLOB(52428800), FROMLDAP
     CHAR(1), SECURITYPROFILE VARCHAR(30), CONSTRAINT SECGRP_SECURITY FOREIGN
     KEY (SECURITYPROFILE) REFERENCES IIBADMIN.SECURITYPROFILEKIND, CREATEDBY
     VARCHAR(100), CREATEDON TIMESTAMP, LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT
     NULL)  ;
CREATE UNIQUE INDEX IIBADMIN.SECGRPUUIDUNIQUE ON IIBADMIN.SECGRP (UUID) ;
CREATE SEQUENCE IIBADMIN.SECURITYROLEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SECURITYROLE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT SECURITY_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CUSTOMROLE CHAR(1), CREATEDBY VARCHAR(100),
     CREATEDON TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP,
     NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL)  ;
CREATE UNIQUE INDEX IIBADMIN.SECURIUUIDUNIQ ON IIBADMIN.SECURITYROLE (UUID) ;
CREATE SEQUENCE IIBADMIN.GROUPROLEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.GROUPROLE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT GROUPROL_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, ILRROLE INTEGER, CONSTRAINT
     GROUPROL_SECURITY FOREIGN KEY (ILRROLE) REFERENCES IIBADMIN.SECURITYROLE
     ON DELETE CASCADE, CONTAINER INTEGER NOT NULL, CONSTRAINT GROUPROLE_SECGRP
     FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.SECGRP ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.GROUPROL_CONTAINE ON IIBADMIN.GROUPROLE (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.SERVERIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SERVER (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT SERVER_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CREATEDBY VARCHAR(100), CREATEDON
     TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, DESCRIPTION
     CLOB(52428800), LOGINSERVER VARCHAR(255), PASSWORD VARCHAR(255),
     SERVERKIND VARCHAR(30), CONSTRAINT SERVER_SERVERKIND FOREIGN KEY
     (SERVERKIND) REFERENCES IIBADMIN.SERVERKIND, URL VARCHAR(750))  ;
CREATE UNIQUE INDEX IIBADMIN.SERVERNAMEUNIQUE ON IIBADMIN.SERVER (NAME,
     SERVERKIND) ;
CREATE UNIQUE INDEX IIBADMIN.SERVERUUIDUNIQUE ON IIBADMIN.SERVER (UUID) ;
CREATE SEQUENCE IIBADMIN.SYSTEMLOCKIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SYSTEMLOCK (ID INTEGER NOT NULL, TYPE INTEGER NOT NULL,
     CONSTRAINT SYSTEMLO_METAMODE FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, BRANCH INTEGER NOT NULL, ELEMENTID INTEGER NOT NULL,
     ELEMENTTYPE INTEGER NOT NULL, CONSTRAINT SYSTEMLOCKELTTYPE FOREIGN KEY
     (ELEMENTTYPE) REFERENCES IIBADMIN.METAMODEL, TOGGLE VARCHAR(5), PRIMARY
     KEY (BRANCH, ELEMENTID, ELEMENTTYPE))  ;
CREATE SEQUENCE IIBADMIN.TESTREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.TESTREPORT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT TESTREPO_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     TESTREPO_SCENARIO FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.SCENARIOSUITEREPORT ON DELETE CASCADE, ERRORCAUSE CLOB(52428800),
     ERRORMESSAGE CLOB(52428800), EXPECTEDVALUES CLOB(52428800), HIGHLIGHT
     CHAR(1), MESSAGE CLOB(52428800), NAME CLOB(52428800) NOT NULL,
     OBSERVEDVALUES CLOB(52428800), SCENARIOTESTREPORTINDEX INTEGER NOT NULL,
     STATUS VARCHAR(255) NOT NULL)  ;
CREATE INDEX IIBADMIN.TESTREPO_CONTAINE ON IIBADMIN.TESTREPORT (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.USERSETTINGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.USERSETTING (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT USERSETT_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, ILRKEY VARCHAR(750) NOT NULL, USERNAME
     VARCHAR(100), VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.USERSETTINGIDX ON IIBADMIN.USERSETTING (USERNAME, ILRKEY)
     ;
CREATE SEQUENCE IIBADMIN.USRIDENTITY ORDER ;
CREATE TABLE IIBADMIN.USR (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE INTEGER
     NOT NULL, CONSTRAINT USR_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, DISPLAYNAME VARCHAR(255), EMAIL VARCHAR(100), FROMLDAP
     CHAR(1), LASTLOGGEDIN TIMESTAMP, CREATEDBY VARCHAR(100), CREATEDON
     TIMESTAMP, LASTCHANGEDBY VARCHAR(100), LASTCHANGEDON TIMESTAMP, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL)  ;
CREATE UNIQUE INDEX IIBADMIN.USRUUIDUNIQUE ON IIBADMIN.USR (UUID) ;
CREATE SEQUENCE IIBADMIN.GROUPUSERIDENTITY ORDER ;
CREATE TABLE IIBADMIN.GROUPUSER (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT GROUPUSE_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, MEMBER INTEGER NOT NULL, CONSTRAINT
     GROUPUSER_USR FOREIGN KEY (MEMBER) REFERENCES IIBADMIN.USR ON DELETE
     CASCADE, CONTAINER INTEGER NOT NULL, CONSTRAINT GROUPUSER_SECGRP FOREIGN
     KEY (CONTAINER) REFERENCES IIBADMIN.SECGRP ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.GROUPUSE_CONTAINE ON IIBADMIN.GROUPUSER (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.USERGROUPIDENTITY ORDER ;
CREATE TABLE IIBADMIN.USERGROUP (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT USERGROU_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     USERGROUP_USR FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.USR ON DELETE
     CASCADE, GRP INTEGER NOT NULL, CONSTRAINT USERGROUP_SECGRP FOREIGN KEY
     (GRP) REFERENCES IIBADMIN.SECGRP ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.USERGROU_CONTAINE ON IIBADMIN.USERGROUP (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.USERPROPERTYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.USERPROPERTY (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT USERPROP_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     USERPROPERTY_USR FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.USR ON DELETE
     CASCADE, NAME VARCHAR(255) NOT NULL, VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.USERPROP_CONTAINE ON IIBADMIN.USERPROPERTY (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.PERMISSIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.PERMISSION (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     ILRGROUP VARCHAR(50) NOT NULL, TYPE VARCHAR(40) NOT NULL, ILRLEVEL
     VARCHAR(40) NOT NULL, ARGS VARCHAR(255) NOT NULL, ILRORDER INTEGER NOT
     NULL)  ;
CREATE SEQUENCE IIBADMIN.RTSRESOURCEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RTSRESOURCE (ID INTEGER NOT NULL, PRIMARY KEY (ID), NAME
     VARCHAR(255), VERSION INTEGER, CONTENT CLOB(52428800))  ;
CREATE TABLE IIBADMIN.SCHEMAVERSION (VERSION VARCHAR(255))  ;
INSERT INTO IIBADMIN.SCHEMAVERSION (VERSION) values ('JRules 8.8') ;
CREATE SEQUENCE IIBADMIN.VERSIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VERSION (ID INTEGER NOT NULL, MAJOR INTEGER, MINOR
     INTEGER, USERNAME VARCHAR(100), COMMENTAIRE VARCHAR(500), VERSDATE
     TIMESTAMP, ELTORIGINALID INTEGER NOT NULL, TYPE INTEGER NOT NULL,
     UPDMAJORVERS CHAR(1), DELETED CHAR(1) NOT NULL, SYSVERS CHAR(1) NOT NULL,
     PROJECT INTEGER NOT NULL, BASELINE INTEGER NOT NULL, MERGEDFROMBASELINE
     INTEGER, MERGEDFROMVERSION INTEGER, PRIMARY KEY (ID), CONSTRAINT
     VERSION_METAMODEL FOREIGN KEY (TYPE) REFERENCES IIBADMIN.METAMODEL,
     CONSTRAINT VERSION_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, CONSTRAINT VERSION_BASELINE
     FOREIGN KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE)  ;
INSERT INTO IIBADMIN.VERSION (ID, COMMENTAIRE, ELTORIGINALID, type, DELETED,
     SYSVERS, PROJECT, BASELINE) VALUES (2147483647,
     'Dummy record for internal purposes.', 2147483647, 1, 'F', 'T',
     2147483647, 2147483647) ;
CREATE TABLE IIBADMIN.BASELINECONTENT (BASELINE INTEGER NOT NULL, CONSTRAINT
     BASELINE_BASELINE FOREIGN KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON
     DELETE CASCADE, VERSION INTEGER NOT NULL, CONSTRAINT BASELINE_VERSION
     FOREIGN KEY (VERSION) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     PRIMARY KEY (VERSION, BASELINE))  ;
CREATE SEQUENCE IIBADMIN.LOCKTBLIDENTITY ORDER ;
CREATE TABLE IIBADMIN.LOCKTBL (ID INTEGER NOT NULL, TYPE INTEGER NOT NULL,
     CONSTRAINT LOCKTBL_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, BRANCH INTEGER NOT NULL, CONSTRAINT LOCKTBL_BSLN
     FOREIGN KEY (BRANCH) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     ELEMENTID INTEGER NOT NULL, ELEMENTTYPE INTEGER NOT NULL, CONSTRAINT
     LOCKELTTYPE FOREIGN KEY (ELEMENTTYPE) REFERENCES IIBADMIN.METAMODEL, OWNER
     VARCHAR(100), PERSISTENT CHAR(1), ROOTLOCKID INTEGER, SESSIONID
     VARCHAR(40), SYSTEM CHAR(1), PRIMARY KEY (BRANCH, ELEMENTID, ELEMENTTYPE))
     ;
CREATE SEQUENCE IIBADMIN.RULEPACKAGEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEPACKAGE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULEPACK_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKRULEPA_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKRULEPACKAGE_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT RULEPACKAGE_CKENDI CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT RULEPACKAGE_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     RULEPACK_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT RULEPACK_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, PACKAGEKIND VARCHAR(30) NOT NULL,
     CONSTRAINT PACKAGEKINDREF FOREIGN KEY (PACKAGEKIND) REFERENCES
     IIBADMIN.PACKAGEKIND, PARENT INTEGER, CONSTRAINT RULEPACKAGE_PARENT
     FOREIGN KEY (PARENT) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     RULEORDER CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULEPACK_PRJBRANC ON IIBADMIN.RULEPACKAGE (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.RULEPANAMEUNIQ ON IIBADMIN.RULEPACKAGE (BASELINE,
     NAME, PARENT, PACKAGEKIND, ENDID) ;
CREATE UNIQUE INDEX IIBADMIN.RULEPAUUIDUNIQ ON IIBADMIN.RULEPACKAGE (UUID,
     BASELINE, ENDID) ;
CREATE TABLE IIBADMIN.RULEPACKAGESIBLING (ID INTEGER NOT NULL, PRIMARY KEY
     (ID))  ;
ALTER TABLE IIBADMIN.RULEPACKAGESIBLING ADD CONSTRAINT FKRULEPACKAGE FOREIGN
     KEY (ID) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE ;
CREATE SEQUENCE IIBADMIN.ABSTRACTQUERYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ABSTRACTQUERY (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT ABSTRACT_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKABSTRA_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKABSTRA_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     ABSTRACTQUERY_CKEN CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT ABSTRACTQUERY_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     ABSTRACT_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, DEFINITION CLOB(52428800), INCLUDEDEPENDENCIES CHAR(1),
     LOCALE VARCHAR(30), NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT ABSTRACT_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT ABSTRACT_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, PROPERTYPATH CLOB(52428800))  ;
CREATE INDEX IIBADMIN.ABSTRACT_PRJBRANC ON IIBADMIN.ABSTRACTQUERY (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.ABSTRANAMEUNIQ ON IIBADMIN.ABSTRACTQUERY
     (RULEPACKAGE, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.ABSTRAUUIDUNIQ ON IIBADMIN.ABSTRACTQUERY (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.ABSTRACTQUERYDTLS AS SELECT BSTRCTQRY.ID,
     BSTRCTQRY.ORIGINALID, BSTRCTQRY.STARTID, BSTRCTQRY.ENDID,
     BSTRCTQRY.BASELINE, BSTRCTQRY.TYPE, BSTRCTQRY.DEFINITION,
     BSTRCTQRY.INCLUDEDEPENDENCIES, BSTRCTQRY.LOCALE, BSTRCTQRY.NAME,
     BSTRCTQRY.UUID, BSTRCTQRY.RULEPACKAGE, BSTRCTQRY.DOCUMENTATION,
     BSTRCTQRY.GRP, BSTRCTQRY.PROJECT, BSTRCTQRY.PROPERTYPATH, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.ABSTRACTQUERY BSTRCTQRY,
     IIBADMIN.ABSTRACTQUERY ABSTRACTQUERYCR, IIBADMIN.VERSION VCR,
     IIBADMIN.VERSION VUPDT WHERE BSTRCTQRY.ORIGINALID = ABSTRACTQUERYCR.ID AND
     ABSTRACTQUERYCR.STARTID = VCR.ID AND BSTRCTQRY.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.ACTIVITYLOCKIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ACTIVITYLOCK (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT ACTIVITY_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, ELTBASETYPE INTEGER NOT NULL, ELTNAME
     VARCHAR(255) NOT NULL, ELTPACKAGE INTEGER, CONSTRAINT ACTIVITY_RULEPACK
     FOREIGN KEY (ELTPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE
     CASCADE, JUSTIFYINGVID INTEGER, OWNER INTEGER NOT NULL, CONSTRAINT OWNERCA
     FOREIGN KEY (OWNER) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, BRANCH
     INTEGER NOT NULL, CONSTRAINT ACTIVITYLOCK_BSLN FOREIGN KEY (BRANCH)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, ELEMENTID INTEGER NOT
     NULL, ELEMENTTYPE INTEGER NOT NULL, CONSTRAINT ACTIVITYLOCKELTTYPE FOREIGN
     KEY (ELEMENTTYPE) REFERENCES IIBADMIN.METAMODEL)  ;
CREATE INDEX IIBADMIN.ACTIVITYLOCKELTIDX ON IIBADMIN.ACTIVITYLOCK (ELEMENTID,
     ELEMENTTYPE, BRANCH) ;
CREATE SEQUENCE IIBADMIN.BOMIDENTITY ORDER ;
CREATE TABLE IIBADMIN.BOM (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE INTEGER
     NOT NULL, CONSTRAINT BOM_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT FKBOM_STARTV
     FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, ENDID
     INTEGER NOT NULL, CONSTRAINT FKBOM_ENDV FOREIGN KEY (ENDID) REFERENCES
     IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT BOM_CKENDIDSTARTID CHECK
     (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL, BASELINE INTEGER NOT
     NULL, CONSTRAINT BOM_BSLN FOREIGN KEY (BASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT BOM_BRSTUDIO FOREIGN KEY
     (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, BODY
     CLOB(52428800), NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT BOM_RULEPACKAGE FOREIGN KEY (RULEPACKAGE)
     REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION
     CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER, CONSTRAINT
     BOM_RULEPROJECT FOREIGN KEY (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON
     DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.BOM_PRJBRANCH ON IIBADMIN.BOM (PROJECT, BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.BOMNAMEUNIQUE ON IIBADMIN.BOM (RULEPACKAGE,
     BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.BOMUUIDUNIQUE ON IIBADMIN.BOM (UUID, BASELINE,
     ENDID) ;
CREATE SEQUENCE IIBADMIN.BOM2XOMMAPPINGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.BOM2XOMMAPPING (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT BOM2XOMM_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKBOM2XO_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKBOM2XO_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     BOM2XOMMAPPING_CKE CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT BOM2XOMM_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     BOM2XOMM_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, BODY CLOB(52428800), PLATFORM VARCHAR(30), NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, RULEPACKAGE INTEGER,
     CONSTRAINT BOM2XOMM_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION CLOB(52428800), GRP
     VARCHAR(100), PROJECT INTEGER, CONSTRAINT BOM2XOMM_RULEPROJ FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.BOM2XOMM_PRJBRANC ON IIBADMIN.BOM2XOMMAPPING (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.BOM2XONAMEUNIQ ON IIBADMIN.BOM2XOMMAPPING
     (RULEPACKAGE, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.BOM2XOUUIDUNIQ ON IIBADMIN.BOM2XOMMAPPING (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.BOM2XOMMAPPINGDTLS AS SELECT BM2XMMPPNG.ID,
     BM2XMMPPNG.ORIGINALID, BM2XMMPPNG.STARTID, BM2XMMPPNG.ENDID,
     BM2XMMPPNG.BASELINE, BM2XMMPPNG.TYPE, BM2XMMPPNG.BODY,
     BM2XMMPPNG.PLATFORM, BM2XMMPPNG.NAME, BM2XMMPPNG.UUID,
     BM2XMMPPNG.RULEPACKAGE, BM2XMMPPNG.DOCUMENTATION, BM2XMMPPNG.GRP,
     BM2XMMPPNG.PROJECT, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.BOM2XOMMAPPING BM2XMMPPNG, IIBADMIN.BOM2XOMMAPPING
     BOM2XOMMAPPINGCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     BM2XMMPPNG.ORIGINALID = BOM2XOMMAPPINGCR.ID AND BOM2XOMMAPPINGCR.STARTID =
     VCR.ID AND BM2XMMPPNG.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.BOMDTLS AS SELECT BM.ID, BM.ORIGINALID, BM.STARTID,
     BM.ENDID, BM.BASELINE, BM.TYPE, BM.BODY, BM.NAME, BM.UUID, BM.RULEPACKAGE,
     BM.DOCUMENTATION, BM.GRP, BM.PROJECT, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME
     AS LASTCHANGEDBY FROM IIBADMIN.BOM BM, IIBADMIN.BOM BOMCR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE BM.ORIGINALID =
     BOMCR.ID AND BOMCR.STARTID = VCR.ID AND BM.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.BOMPATHENTRYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.BOMPATHENTRY (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT BOMPATHE_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, BOM INTEGER, CONSTRAINT BOMPATHENTRY_BOM
     FOREIGN KEY (BOM) REFERENCES IIBADMIN.BOM ON DELETE CASCADE, ILRORDER
     INTEGER NOT NULL, URL CLOB(52428800), PROJECTNAME VARCHAR(255), CONTAINER
     INTEGER NOT NULL, CONSTRAINT BOMPATHE_PROJECTI FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.PROJECTINFO ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.BOMPATHE_CONTAINE ON IIBADMIN.BOMPATHENTRY (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.DEPLOYMENTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPLOYMENT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT DPLMNT_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDPLMNT_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDPLMNT_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     DPLMNT_CKENDIDSTAR CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT DPLMNT_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT DPLMNT_BRSTUDIO
     FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, RULEPACKAGE INTEGER,
     CONSTRAINT DPLMNT_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION CLOB(52428800), GRP
     VARCHAR(100), PROJECT INTEGER, CONSTRAINT DPLMNT_RULEPROJECT FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE, MANAGINGXOM
     CHAR(1) NOT NULL, PRODUCTION CHAR(1) NOT NULL, RULEAPPNAME VARCHAR(255),
     RULEAPPVERSION VARCHAR(255) NOT NULL, SNAPSHOTBASENAME VARCHAR(255),
     SNAPSHOTCREATION VARCHAR(30), CONSTRAINT DPLMNT_SNAPSHOT FOREIGN KEY
     (SNAPSHOTCREATION) REFERENCES IIBADMIN.SNAPSHOTCREATIONKIND)  ;
CREATE INDEX IIBADMIN.DPLMNT_PRJBRANCH ON IIBADMIN.DEPLOYMENT (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.DPLMNTUUIDUNIQUE ON IIBADMIN.DEPLOYMENT (UUID,
     BASELINE, ENDID) ;
CREATE SEQUENCE IIBADMIN.DEPGROUPIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPGROUP (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT DEPGROUP_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDEPGROUP_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDEPGROUP_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     DEPGROUP_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT DEPGROUP_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, GRP VARCHAR(100) NOT NULL,
     CONTAINER INTEGER NOT NULL, CONSTRAINT DEPGROUP_DPLMNT FOREIGN KEY
     (CONTAINER) REFERENCES IIBADMIN.DEPLOYMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.DEPGROUP_CONTAINER ON IIBADMIN.DEPGROUP (CONTAINER) ;
CREATE VIEW IIBADMIN.DEPLOYMENTDTLS AS SELECT DPLYMNT.ID, DPLYMNT.ORIGINALID,
     DPLYMNT.STARTID, DPLYMNT.ENDID, DPLYMNT.BASELINE, DPLYMNT.TYPE,
     DPLYMNT.NAME, DPLYMNT.UUID, DPLYMNT.RULEPACKAGE, DPLYMNT.DOCUMENTATION,
     DPLYMNT.GRP, DPLYMNT.PROJECT, DPLYMNT.MANAGINGXOM, DPLYMNT.PRODUCTION,
     DPLYMNT.RULEAPPNAME, DPLYMNT.RULEAPPVERSION, DPLYMNT.SNAPSHOTBASENAME,
     DPLYMNT.SNAPSHOTCREATION, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.DEPLOYMENT DPLYMNT, IIBADMIN.DEPLOYMENT
     DEPLOYMENTCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     DPLYMNT.ORIGINALID = DEPLOYMENTCR.ID AND DEPLOYMENTCR.STARTID = VCR.ID AND
     DPLYMNT.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.DEPPROPERTYTAGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPPROPERTYTAG (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT DEPPROPT_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDEPPRO_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDEPPROPTAG_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT DEPPROPTAG_CKENDID CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT DEPPROPTAG_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, NAME
     VARCHAR(255) NOT NULL, VALUE CLOB(52428800), CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPPROPTAG_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.DEPLOYMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.DEPPROPT_CONTAINE ON IIBADMIN.DEPPROPERTYTAG (CONTAINER)
     ;
CREATE SEQUENCE IIBADMIN.DEPTARGETIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPTARGET (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT DEPTARGE_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDEPTARGET_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDEPTARGET_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT DEPTARGET_CKENDIDS CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT DEPTARGET_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, ACTIVE CHAR(1)
     NOT NULL, NAME VARCHAR(100), CONTAINER INTEGER NOT NULL, CONSTRAINT
     DEPTARGET_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.DEPLOYMENT ON
     DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.DEPTARGE_CONTAINE ON IIBADMIN.DEPTARGET (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.DEPVERSIONPOLICYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPVERSIONPOLICY (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT DEPVERSP_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDEPVER_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDEPVER_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     DEPVERSPOLICY_CKEN CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT DEPVERSPOLICY_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, DEFAULTPOLICY
     CHAR(1), DESCRIPTION VARCHAR(255), LABEL VARCHAR(100), RECURRENT CHAR(1),
     RULEAPP VARCHAR(30), CONSTRAINT RULEAPPDEPVERS FOREIGN KEY (RULEAPP)
     REFERENCES IIBADMIN.DEPLOYMENTVERSIONNINGKIND, RULESET VARCHAR(30),
     CONSTRAINT RULESETDEPVERS FOREIGN KEY (RULESET) REFERENCES
     IIBADMIN.DEPLOYMENTVERSIONNINGKIND, CONTAINER INTEGER NOT NULL, CONSTRAINT
     DEPVERSP_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.DEPLOYMENT ON
     DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.DEPVERSP_CONTAINE ON IIBADMIN.DEPVERSIONPOLICY
     (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.DSDEPLOYMENTREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DSDEPLOYMENTREPORT (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT DSDEPLOY_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, CONSTRAINT DSDEPLOY_BRSTUDIO FOREIGN
     KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, CREATEDBY
     VARCHAR(100), CREATEDON TIMESTAMP, LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT
     NULL, RULEPACKAGE INTEGER, CONSTRAINT DSDEPLOY_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT DSDEPLOY_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, DCONFIGID VARCHAR(255),
     DCONFIGNAME VARCHAR(255), DEPLOYMENTSNAPSHOT INTEGER, CONSTRAINT
     DSDEPBSINREF FOREIGN KEY (DEPLOYMENTSNAPSHOT) REFERENCES IIBADMIN.BASELINE
     ON DELETE CASCADE, ENDDEPLOYMENT TIMESTAMP, ORIGINALBASELINE INTEGER NOT
     NULL, CONSTRAINT ORIGINALDRBSINREF FOREIGN KEY (ORIGINALBASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, SERVERS CLOB(52428800),
     STATUS VARCHAR(30), CONSTRAINT DSDEPLOY_REPORTST FOREIGN KEY (STATUS)
     REFERENCES IIBADMIN.REPORTSTATUSKIND)  ;
CREATE UNIQUE INDEX IIBADMIN.DSDEPLUUIDUNIQ ON IIBADMIN.DSDEPLOYMENTREPORT
     (UUID) ;
CREATE SEQUENCE IIBADMIN.DEPLOYMENTERRORIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPLOYMENTERROR (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT DEPLOYME_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL, CONSTRAINT
     DEPLOYME_DSDEPLOY FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.DSDEPLOYMENTREPORT ON DELETE CASCADE, ARTIFACTINERROR
     VARCHAR(30), MESSAGE BLOB(2048))  ;
CREATE INDEX IIBADMIN.DEPLOYME_CONTAINE ON IIBADMIN.DEPLOYMENTERROR (CONTAINER)
     ;
CREATE SEQUENCE IIBADMIN.EVENTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.EVENT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT EVENT_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT FKEVENT_STARTV
     FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, ENDID
     INTEGER NOT NULL, CONSTRAINT FKEVENT_ENDV FOREIGN KEY (ENDID) REFERENCES
     IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT EVENT_CKENDIDSTART CHECK
     (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL, BASELINE INTEGER NOT
     NULL, CONSTRAINT EVENT_BSLN FOREIGN KEY (BASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT EVENT_BRSTUDIO FOREIGN KEY
     (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, BODY
     CLOB(52428800), NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     VALUE CLOB(52428800), VALUETYPE VARCHAR(30), CONSTRAINT EVENT_NAMEDCON
     FOREIGN KEY (VALUETYPE) REFERENCES IIBADMIN.NAMEDCONSTANTTYPE, RULEPACKAGE
     INTEGER, CONSTRAINT EVENT_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION CLOB(52428800), GRP
     VARCHAR(100), PROJECT INTEGER, CONSTRAINT EVENT_RULEPROJECT FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.EVENT_PRJBRANCH ON IIBADMIN.EVENT (PROJECT, BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.EVENTNAMEUNIQUE ON IIBADMIN.EVENT (TYPE, BASELINE,
     ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.EVENTUUIDUNIQUE ON IIBADMIN.EVENT (UUID, BASELINE,
     ENDID) ;
CREATE TABLE IIBADMIN.EVENTSIBLING (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     EFFECTIVEDATE TIMESTAMP, EXPIRATIONDATE TIMESTAMP, STATUS VARCHAR(30) NOT
     NULL, CONSTRAINT EVENT_STATUS FOREIGN KEY (STATUS) REFERENCES
     IIBADMIN.STATUS)  ;
ALTER TABLE IIBADMIN.EVENTSIBLING ADD CONSTRAINT FKEVENT FOREIGN KEY (ID)
     REFERENCES IIBADMIN.EVENT ON DELETE CASCADE ;
CREATE VIEW IIBADMIN.EVENTSTDXTD AS SELECT VNT.ID, VNT.ORIGINALID, VNT.STARTID,
     VNT.ENDID, VNT.BASELINE, VNT.TYPE, VNT.BODY, VNT.NAME, VNT.UUID,
     VNT.VALUE, VNT.VALUETYPE, VNT.RULEPACKAGE, VNT.DOCUMENTATION, VNT.GRP,
     VNT.PROJECT, VNTSBLNG.EFFECTIVEDATE, VNTSBLNG.EXPIRATIONDATE,
     VNTSBLNG.STATUS FROM IIBADMIN.EVENTSIBLING VNTSBLNG, IIBADMIN.EVENT VNT
     WHERE VNT.ID = VNTSBLNG.ID ;
CREATE VIEW IIBADMIN.EVENTDTLS AS SELECT VNT.ID, VNT.ORIGINALID, VNT.STARTID,
     VNT.ENDID, VNT.BASELINE, VNT.TYPE, VNT.BODY, VNT.NAME, VNT.UUID,
     VNT.VALUE, VNT.VALUETYPE, VNT.RULEPACKAGE, VNT.DOCUMENTATION, VNT.GRP,
     VNT.PROJECT, VNTSBLNG.EFFECTIVEDATE, VNTSBLNG.EXPIRATIONDATE,
     VNTSBLNG.STATUS, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.EVENTSIBLING VNTSBLNG, IIBADMIN.EVENT VNT, IIBADMIN.EVENT
     EVENTCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VNT.ID =
     VNTSBLNG.ID AND VNT.ORIGINALID = EVENTCR.ID AND EVENTCR.STARTID = VCR.ID
     AND VNT.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.EXTRACTORIDENTITY ORDER ;
CREATE TABLE IIBADMIN.EXTRACTOR (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT EXTRACTO_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, NAME VARCHAR(255) NOT NULL, QUERY INTEGER,
     CONSTRAINT EXTRACTO_ABSTRACT FOREIGN KEY (QUERY) REFERENCES
     IIBADMIN.ABSTRACTQUERY ON DELETE CASCADE, VALIDATOR CLOB(52428800),
     CONTAINER INTEGER NOT NULL, CONSTRAINT EXTRACTO_PROJECTI FOREIGN KEY
     (CONTAINER) REFERENCES IIBADMIN.PROJECTINFO ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.EXTRACTO_CONTAINE ON IIBADMIN.EXTRACTOR (CONTAINER) ;
CREATE UNIQUE INDEX IIBADMIN.EXTRACTORNAMEUNIQ ON IIBADMIN.EXTRACTOR (NAME,
     CONTAINER) ;
CREATE INDEX IIBADMIN.FOLDERPARENTIDX ON IIBADMIN.RULEPACKAGE (PARENT, ENDID) ;
CREATE UNIQUE INDEX IIBADMIN.FOLDERVERSION ON IIBADMIN.RULEPACKAGE (ORIGINALID,
     TYPE, PARENT, STARTID, ENDID) ;
CREATE SEQUENCE IIBADMIN.OPLATESTVIDENTITY ORDER ;
CREATE TABLE IIBADMIN.OPERATIONLATESTDEPLOYEDVERSION (ID INTEGER NOT NULL,
     PRIMARY KEY (ID), TYPE INTEGER NOT NULL, CONSTRAINT OPLATEST_METAMODE
     FOREIGN KEY (TYPE) REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT
     NULL, CONSTRAINT OPLATEST_DSDEPLOY FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.DSDEPLOYMENTREPORT ON DELETE CASCADE, OPERATIONNAME VARCHAR(255)
     NOT NULL, VERSION VARCHAR(30) NOT NULL)  ;
CREATE INDEX IIBADMIN.OPLATEST_CONTAINE ON
     IIBADMIN.OPERATIONLATESTDEPLOYEDVERSION (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.OPNEWVIDENTITY ORDER ;
CREATE TABLE IIBADMIN.OPERATIONNEWDEPLOYEDVERSION (ID INTEGER NOT NULL, PRIMARY
     KEY (ID), TYPE INTEGER NOT NULL, CONSTRAINT OPNEWV_METAMODEL FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, CONTAINER INTEGER NOT NULL,
     CONSTRAINT OPNEWV_DSDEPLOY FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.DSDEPLOYMENTREPORT ON DELETE CASCADE, OPERATIONNAME VARCHAR(255)
     NOT NULL, VERSION VARCHAR(30) NOT NULL)  ;
CREATE INDEX IIBADMIN.OPNEWV_CONTAINER ON IIBADMIN.OPERATIONNEWDEPLOYEDVERSION
     (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.PRJRESOURCEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.PRJRESOURCE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT PRJRESOU_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKPRJRES_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKPRJRESOURCE_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT PRJRESOURCE_CKENDI CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT PRJRESOURCE_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     PRJRESOU_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT PRJRESOU_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT PRJRESOU_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, BODY BLOB(52428800), EXTENSION
     VARCHAR(255))  ;
CREATE INDEX IIBADMIN.PRJRESOU_PRJBRANC ON IIBADMIN.PRJRESOURCE (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.PRJRESNAMEUNIQ ON IIBADMIN.PRJRESOURCE
     (RULEPACKAGE, BASELINE, ENDID, NAME, EXTENSION) ;
CREATE UNIQUE INDEX IIBADMIN.PRJRESUUIDUNIQ ON IIBADMIN.PRJRESOURCE (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.PRJRESOURCEDTLS AS SELECT PRJRSRC.ID, PRJRSRC.ORIGINALID,
     PRJRSRC.STARTID, PRJRSRC.ENDID, PRJRSRC.BASELINE, PRJRSRC.TYPE,
     PRJRSRC.NAME, PRJRSRC.UUID, PRJRSRC.RULEPACKAGE, PRJRSRC.DOCUMENTATION,
     PRJRSRC.GRP, PRJRSRC.PROJECT, PRJRSRC.BODY, PRJRSRC.EXTENSION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.PRJRESOURCE
     PRJRSRC, IIBADMIN.PRJRESOURCE PRJRESOURCECR, IIBADMIN.VERSION VCR,
     IIBADMIN.VERSION VUPDT WHERE PRJRSRC.ORIGINALID = PRJRESOURCECR.ID AND
     PRJRESOURCECR.STARTID = VCR.ID AND PRJRSRC.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.RULEFLOWIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEFLOW (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULEFLOW_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKRULEFLOW_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKRULEFLOW_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     RULEFLOW_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT RULEFLOW_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     RULEFLOW_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT RULEFLOW_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT RULEFLOW_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, BODY CLOB(52428800), DIAGRAM
     CLOB(52428800), FINALACTIONS CLOB(52428800), IMPORTS CLOB(52428800),
     INITIALACTIONS CLOB(52428800), LOCALE VARCHAR(30), MAINFLOWTASK CHAR(1))
     ;
CREATE INDEX IIBADMIN.RULEFLOW_PRJBRANCH ON IIBADMIN.RULEFLOW (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.RULEFLOWUUIDUNIQUE ON IIBADMIN.RULEFLOW (UUID,
     BASELINE, ENDID) ;
CREATE TABLE IIBADMIN.RULEFLOWSIBLING (ID INTEGER NOT NULL, PRIMARY KEY (ID))
     ;
ALTER TABLE IIBADMIN.RULEFLOWSIBLING ADD CONSTRAINT FKRULEFLOW FOREIGN KEY (ID)
     REFERENCES IIBADMIN.RULEFLOW ON DELETE CASCADE ;
CREATE SEQUENCE IIBADMIN.OPERATIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.OPERATION (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT OPERATIO_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKOPERATION_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKOPERATION_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT OPERATION_CKENDIDS CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT OPERATION_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     OPERATION_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT OPERATIO_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT OPERATIO_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, ADVANCEDPROPERTIES CLOB(52428800),
     BUSINESSDISPLAYNAME VARCHAR(100), DESCRIPTION VARCHAR(255),
     ENGINECONFIGURATIONFILE VARCHAR(255), EXTRACTOR VARCHAR(100), RULEFLOW
     INTEGER, CONSTRAINT OPERATION_RULEFLOW FOREIGN KEY (RULEFLOW) REFERENCES
     IIBADMIN.RULEFLOW ON DELETE CASCADE, RULESETNAME VARCHAR(100),
     RULESETPROPERTIES CLOB(52428800), TARGETRULEPROJECT INTEGER, CONSTRAINT
     OPERATION_TARGETPRJ FOREIGN KEY (TARGETRULEPROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, USINGEXTRACTOR CHAR(1),
     USINGRULEFLOW CHAR(1))  ;
CREATE INDEX IIBADMIN.OPERATIO_PRJBRANC ON IIBADMIN.OPERATION (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.OPERATIONUUIDUNIQ ON IIBADMIN.OPERATION (UUID,
     BASELINE, ENDID) ;
CREATE SEQUENCE IIBADMIN.DEPOPERATIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPOPERATION (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT DEPOP_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT FKDEPOP_STARTV
     FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, ENDID
     INTEGER NOT NULL, CONSTRAINT FKDEPOP_ENDV FOREIGN KEY (ENDID) REFERENCES
     IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT DEPOP_CKENDIDSTART CHECK
     (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL, BASELINE INTEGER NOT
     NULL, CONSTRAINT DEPOP_BSLN FOREIGN KEY (BASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, ACTIVE CHAR(1) NOT NULL, OPERATION
     INTEGER, CONSTRAINT DEPOP_OPERATION FOREIGN KEY (OPERATION) REFERENCES
     IIBADMIN.OPERATION ON DELETE CASCADE, OPERATIONNAME VARCHAR(255) NOT NULL,
     CONTAINER INTEGER NOT NULL, CONSTRAINT DEPOP_DPLMNT FOREIGN KEY
     (CONTAINER) REFERENCES IIBADMIN.DEPLOYMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.DEPOP_CONTAINER ON IIBADMIN.DEPOPERATION (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.DEPOPERATIONPROPERTYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEPOPERATIONPROPERTY (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT DEPOPPRO_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDEPOPPROP_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDEPOPPROP_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT DEPOPPROP_CKENDIDS CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT DEPOPPROP_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, NAME
     VARCHAR(255) NOT NULL, VALUE CLOB(52428800), OPERATIONREFERENCE INTEGER,
     CONSTRAINT DEPOPPRO_OPERATIO FOREIGN KEY (OPERATIONREFERENCE) REFERENCES
     IIBADMIN.OPERATION ON DELETE CASCADE, CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEPOPPROP_DPLMNT FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.DEPLOYMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.DEPOPPRO_CONTAINE ON IIBADMIN.DEPOPERATIONPROPERTY
     (CONTAINER) ;
CREATE VIEW IIBADMIN.DEPLOYMENTAGGRGTD AS SELECT DPLYMNT.ID,
     DPLYMNT.ORIGINALID, DPLYMNT.STARTID, DPLYMNT.ENDID, DPLYMNT.TYPE,
     DPLYMNT.BASELINE, DPLYMNT.NAME, DPLYMNT.UUID, DPLYMNT.RULEPACKAGE,
     DPLYMNT.DOCUMENTATION, DPLYMNT.GRP, DPLYMNT.PROJECT, DPLYMNT.MANAGINGXOM,
     DPLYMNT.PRODUCTION, DPLYMNT.RULEAPPNAME, DPLYMNT.RULEAPPVERSION,
     DPLYMNT.SNAPSHOTBASENAME, DPLYMNT.SNAPSHOTCREATION, DPPRPRTYTG.ID AS
     DEPPROPERTYTAG_ID, DPPRPRTYTG.ORIGINALID AS DEPPROPERTYTAG_ORIGINALID,
     DPPRPRTYTG.STARTID AS DEPPROPERTYTAG_STARTID, DPPRPRTYTG.ENDID AS
     DEPPROPERTYTAG_ENDID, DPPRPRTYTG.BASELINE AS DEPPROPERTYTAG_BASELINE,
     DPPRPRTYTG.TYPE AS DEPPROPERTYTAG_TYPE, DPPRPRTYTG.NAME AS
     DEPPROPERTYTAG_NAME, DPPRPRTYTG.VALUE AS DEPPROPERTYTAG_VALUE, DPGRP.ID AS
     DEPGROUP_ID, DPGRP.ORIGINALID AS DEPGROUP_ORIGINALID, DPGRP.STARTID AS
     DEPGROUP_STARTID, DPGRP.ENDID AS DEPGROUP_ENDID, DPGRP.BASELINE AS
     DEPGROUP_BASELINE, DPGRP.TYPE AS DEPGROUP_TYPE, DPGRP.GRP AS DEPGROUP_GRP,
     DPPRTNPRPRTY.ID AS DEPOPERATIONPROPERTY_ID, DPPRTNPRPRTY.ORIGINALID AS
     DEPOPERATIONPROPERTY_ORIGINALID, DPPRTNPRPRTY.STARTID AS
     DEPOPERATIONPROPERTY_STARTID, DPPRTNPRPRTY.ENDID AS
     DEPOPERATIONPROPERTY_ENDID, DPPRTNPRPRTY.BASELINE AS
     DEPOPERATIONPROPERTY_BASELINE, DPPRTNPRPRTY.TYPE AS
     DEPOPERATIONPROPERTY_TYPE, DPPRTNPRPRTY.NAME AS DEPOPERATIONPROPERTY_NAME,
     DPPRTNPRPRTY.VALUE AS DEPOPERATIONPROPERTY_VALUE,
     DPPRTNPRPRTY.OPERATIONREFERENCE AS
     DEPOPERATIONPROPERTY_OPERATIONREFERENCE, DPPRTN.ID AS DEPOPERATION_ID,
     DPPRTN.ORIGINALID AS DEPOPERATION_ORIGINALID, DPPRTN.STARTID AS
     DEPOPERATION_STARTID, DPPRTN.ENDID AS DEPOPERATION_ENDID, DPPRTN.BASELINE
     AS DEPOPERATION_BASELINE, DPPRTN.TYPE AS DEPOPERATION_TYPE, DPPRTN.ACTIVE
     AS DEPOPERATION_ACTIVE, DPPRTN.OPERATION AS DEPOPERATION_OPERATION,
     DPPRTN.OPERATIONNAME AS DEPOPERATION_OPERATIONNAME, DPTRGT.ID AS
     DEPTARGET_ID, DPTRGT.ORIGINALID AS DEPTARGET_ORIGINALID, DPTRGT.STARTID AS
     DEPTARGET_STARTID, DPTRGT.ENDID AS DEPTARGET_ENDID, DPTRGT.BASELINE AS
     DEPTARGET_BASELINE, DPTRGT.TYPE AS DEPTARGET_TYPE, DPTRGT.ACTIVE AS
     DEPTARGET_ACTIVE, DPTRGT.NAME AS DEPTARGET_NAME, DPVRSNPLCY.ID AS
     DEPVERSIONPOLICY_ID, DPVRSNPLCY.ORIGINALID AS DEPVERSIONPOLICY_ORIGINALID,
     DPVRSNPLCY.STARTID AS DEPVERSIONPOLICY_STARTID, DPVRSNPLCY.ENDID AS
     DEPVERSIONPOLICY_ENDID, DPVRSNPLCY.BASELINE AS DEPVERSIONPOLICY_BASELINE,
     DPVRSNPLCY.TYPE AS DEPVERSIONPOLICY_TYPE, DPVRSNPLCY.DEFAULTPOLICY AS
     DEPVERSIONPOLICY_DEFAULTPOLICY, DPVRSNPLCY.DESCRIPTION AS
     DEPVERSIONPOLICY_DESCRIPTION, DPVRSNPLCY.LABEL AS DEPVERSIONPOLICY_LABEL,
     DPVRSNPLCY.RECURRENT AS DEPVERSIONPOLICY_RECURRENT, DPVRSNPLCY.RULEAPP AS
     DEPVERSIONPOLICY_RULEAPP, DPVRSNPLCY.RULESET AS DEPVERSIONPOLICY_RULESET,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.DEPLOYMENT
     DPLYMNT LEFT OUTER JOIN IIBADMIN.DEPPROPERTYTAG DPPRPRTYTG ON
     DPLYMNT.ORIGINALID = DPPRPRTYTG.CONTAINER AND DPLYMNT.BASELINE =
     DPPRPRTYTG.BASELINE AND DPPRPRTYTG.STARTID <= DPLYMNT.STARTID AND
     DPLYMNT.ENDID <= DPPRPRTYTG.ENDID LEFT OUTER JOIN IIBADMIN.DEPGROUP DPGRP
     ON DPLYMNT.ORIGINALID = DPGRP.CONTAINER AND DPLYMNT.BASELINE =
     DPGRP.BASELINE AND DPGRP.STARTID <= DPLYMNT.STARTID AND DPLYMNT.ENDID <=
     DPGRP.ENDID LEFT OUTER JOIN IIBADMIN.DEPOPERATIONPROPERTY DPPRTNPRPRTY ON
     DPLYMNT.ORIGINALID = DPPRTNPRPRTY.CONTAINER AND DPLYMNT.BASELINE =
     DPPRTNPRPRTY.BASELINE AND DPPRTNPRPRTY.STARTID <= DPLYMNT.STARTID AND
     DPLYMNT.ENDID <= DPPRTNPRPRTY.ENDID LEFT OUTER JOIN IIBADMIN.DEPOPERATION
     DPPRTN ON DPLYMNT.ORIGINALID = DPPRTN.CONTAINER AND DPLYMNT.BASELINE =
     DPPRTN.BASELINE AND DPPRTN.STARTID <= DPLYMNT.STARTID AND DPLYMNT.ENDID <=
     DPPRTN.ENDID LEFT OUTER JOIN IIBADMIN.DEPTARGET DPTRGT ON
     DPLYMNT.ORIGINALID = DPTRGT.CONTAINER AND DPLYMNT.BASELINE =
     DPTRGT.BASELINE AND DPTRGT.STARTID <= DPLYMNT.STARTID AND DPLYMNT.ENDID <=
     DPTRGT.ENDID LEFT OUTER JOIN IIBADMIN.DEPVERSIONPOLICY DPVRSNPLCY ON
     DPLYMNT.ORIGINALID = DPVRSNPLCY.CONTAINER AND DPLYMNT.BASELINE =
     DPVRSNPLCY.BASELINE AND DPVRSNPLCY.STARTID <= DPLYMNT.STARTID AND
     DPLYMNT.ENDID <= DPVRSNPLCY.ENDID, IIBADMIN.DEPLOYMENT DEPLOYMENTCR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE DPLYMNT.ORIGINALID =
     DEPLOYMENTCR.ID AND DEPLOYMENTCR.STARTID = VCR.ID AND DPLYMNT.STARTID =
     VUPDT.ID ;
CREATE VIEW IIBADMIN.OPERATIONDTLS AS SELECT PRTN.ID, PRTN.ORIGINALID,
     PRTN.STARTID, PRTN.ENDID, PRTN.BASELINE, PRTN.TYPE, PRTN.NAME, PRTN.UUID,
     PRTN.RULEPACKAGE, PRTN.DOCUMENTATION, PRTN.GRP, PRTN.PROJECT,
     PRTN.ADVANCEDPROPERTIES, PRTN.BUSINESSDISPLAYNAME, PRTN.DESCRIPTION,
     PRTN.ENGINECONFIGURATIONFILE, PRTN.EXTRACTOR, PRTN.RULEFLOW,
     PRTN.RULESETNAME, PRTN.RULESETPROPERTIES, PRTN.TARGETRULEPROJECT,
     PRTN.USINGEXTRACTOR, PRTN.USINGRULEFLOW, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME
     AS LASTCHANGEDBY FROM IIBADMIN.OPERATION PRTN, IIBADMIN.OPERATION
     OPERATIONCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     PRTN.ORIGINALID = OPERATIONCR.ID AND OPERATIONCR.STARTID = VCR.ID AND
     PRTN.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.OPERATIONTAGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.OPERATIONTAG (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT OPTAG_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT FKOPTAG_STARTV
     FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, ENDID
     INTEGER NOT NULL, CONSTRAINT FKOPTAG_ENDV FOREIGN KEY (ENDID) REFERENCES
     IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT OPTAG_CKENDIDSTART CHECK
     (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL, BASELINE INTEGER NOT
     NULL, CONSTRAINT OPTAG_BSLN FOREIGN KEY (BASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, NAME VARCHAR(255) NOT NULL, VALUE
     CLOB(52428800), CONTAINER INTEGER NOT NULL, CONSTRAINT OPTAG_OPERATION
     FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)
     ;
CREATE INDEX IIBADMIN.OPTAG_CONTAINER ON IIBADMIN.OPERATIONTAG (CONTAINER) ;
CREATE VIEW IIBADMIN.RULEFLOWSTDXTD AS SELECT RLFLW.ID, RLFLW.ORIGINALID,
     RLFLW.STARTID, RLFLW.ENDID, RLFLW.BASELINE, RLFLW.TYPE, RLFLW.NAME,
     RLFLW.UUID, RLFLW.RULEPACKAGE, RLFLW.DOCUMENTATION, RLFLW.GRP,
     RLFLW.PROJECT, RLFLW.BODY, RLFLW.DIAGRAM, RLFLW.FINALACTIONS,
     RLFLW.IMPORTS, RLFLW.INITIALACTIONS, RLFLW.LOCALE, RLFLW.MAINFLOWTASK FROM
     IIBADMIN.RULEFLOWSIBLING RLFLWSBLNG, IIBADMIN.RULEFLOW RLFLW WHERE
     RLFLW.ID = RLFLWSBLNG.ID ;
CREATE VIEW IIBADMIN.RULEFLOWDTLS AS SELECT RLFLW.ID, RLFLW.ORIGINALID,
     RLFLW.STARTID, RLFLW.ENDID, RLFLW.BASELINE, RLFLW.TYPE, RLFLW.NAME,
     RLFLW.UUID, RLFLW.RULEPACKAGE, RLFLW.DOCUMENTATION, RLFLW.GRP,
     RLFLW.PROJECT, RLFLW.BODY, RLFLW.DIAGRAM, RLFLW.FINALACTIONS,
     RLFLW.IMPORTS, RLFLW.INITIALACTIONS, RLFLW.LOCALE, RLFLW.MAINFLOWTASK,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.RULEFLOWSIBLING RLFLWSBLNG, IIBADMIN.RULEFLOW RLFLW,
     IIBADMIN.RULEFLOW RULEFLOWCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT
     WHERE RLFLW.ID = RLFLWSBLNG.ID AND RLFLW.ORIGINALID = RULEFLOWCR.ID AND
     RULEFLOWCR.STARTID = VCR.ID AND RLFLW.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.RULEFLOWTAGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEFLOWTAG (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULEFLOW_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKRULEFL_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKRULEFLOWTAG_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT RULEFLOWTAG_CKENDI CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT RULEFLOWTAG_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONTAINER
     INTEGER NOT NULL, CONSTRAINT RULEFLOW_RULEFLOW FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.RULEFLOW ON DELETE CASCADE, NAME VARCHAR(255) NOT
     NULL, VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULEFLOW_CONTAINE ON IIBADMIN.RULEFLOWTAG (CONTAINER) ;
CREATE UNIQUE INDEX IIBADMIN.RULEFLNAMEUNIQ ON IIBADMIN.RULEFLOWTAG (CONTAINER,
     ENDID, NAME, BASELINE) ;
CREATE VIEW IIBADMIN.RULEPACKAGESTDXTD AS SELECT RLPCKG.ID, RLPCKG.ORIGINALID,
     RLPCKG.STARTID, RLPCKG.ENDID, RLPCKG.BASELINE, RLPCKG.TYPE, RLPCKG.NAME,
     RLPCKG.UUID, RLPCKG.DOCUMENTATION, RLPCKG.GRP, RLPCKG.PROJECT,
     RLPCKG.PACKAGEKIND, RLPCKG.PARENT, RLPCKG.RULEORDER FROM
     IIBADMIN.RULEPACKAGESIBLING RLPCKGSBLNG, IIBADMIN.RULEPACKAGE RLPCKG WHERE
     RLPCKG.ID = RLPCKGSBLNG.ID ;
CREATE VIEW IIBADMIN.RULEPACKAGEDTLS AS SELECT RLPCKG.ID, RLPCKG.ORIGINALID,
     RLPCKG.STARTID, RLPCKG.ENDID, RLPCKG.BASELINE, RLPCKG.TYPE, RLPCKG.NAME,
     RLPCKG.UUID, RLPCKG.DOCUMENTATION, RLPCKG.GRP, RLPCKG.PROJECT,
     RLPCKG.PACKAGEKIND, RLPCKG.PARENT, RLPCKG.RULEORDER, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.RULEPACKAGESIBLING
     RLPCKGSBLNG, IIBADMIN.RULEPACKAGE RLPCKG, IIBADMIN.RULEPACKAGE
     RULEPACKAGECR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     RLPCKG.ID = RLPCKGSBLNG.ID AND RLPCKG.ORIGINALID = RULEPACKAGECR.ID AND
     RULEPACKAGECR.STARTID = VCR.ID AND RLPCKG.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.RULEPROJECTXTDSUMMARY AS SELECT RLPRJCT.ID, RLPRJCT.TYPE,
     RLPRJCT.CREATEDBY, RLPRJCT.CREATEDON, RLPRJCT.NAME, RLPRJCT.UUID,
     RLPRJCT.PLATFORM, VRSN.USERNAME AS LASTCHANGEDBY, VRSN.VERSDATE AS
     LASTCHANGEDON FROM IIBADMIN.RULEPROJECT RLPRJCT, IIBADMIN.VERSION VRSN,
     (SELECT MAX(VRSN.ID) AS ID FROM IIBADMIN.VERSION VRSN GROUP BY
     VRSN.PROJECT) LASTVERSION WHERE RLPRJCT.ID = VRSN.PROJECT AND RLPRJCT.ID
     != 2147483647 AND VRSN.ID = LASTVERSION.ID ;
CREATE SEQUENCE IIBADMIN.SCENARIOSUITEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SCENARIOSUITE (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT SCSUITE_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKSCSUITE_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKSCSUITE_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     SCSUITE_CKENDIDSTA CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT SCSUITE_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     SCSUITE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE
     CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT SCSUITE_RULEPACK FOREIGN KEY (RULEPACKAGE)
     REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION
     CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER, CONSTRAINT
     SCSUITE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON
     DELETE CASCADE, ENTRYPOINT CLOB(52428800), FORMAT VARCHAR(255),
     TESTBASELINE VARCHAR(255), TESTEXTRACTOR VARCHAR(255))  ;
CREATE INDEX IIBADMIN.SCSUITE_PRJBRANCH ON IIBADMIN.SCENARIOSUITE (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.SCSUITENAMEUNIQUE ON IIBADMIN.SCENARIOSUITE
     (RULEPACKAGE, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.SCSUITEUUIDUNIQUE ON IIBADMIN.SCENARIOSUITE (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.SCENARIOSUITEDTLS AS SELECT SCNRST.ID, SCNRST.ORIGINALID,
     SCNRST.STARTID, SCNRST.ENDID, SCNRST.BASELINE, SCNRST.TYPE, SCNRST.NAME,
     SCNRST.UUID, SCNRST.RULEPACKAGE, SCNRST.DOCUMENTATION, SCNRST.GRP,
     SCNRST.PROJECT, SCNRST.ENTRYPOINT, SCNRST.FORMAT, SCNRST.TESTBASELINE,
     SCNRST.TESTEXTRACTOR, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.SCENARIOSUITE SCNRST, IIBADMIN.SCENARIOSUITE
     SCENARIOSUITECR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     SCNRST.ORIGINALID = SCENARIOSUITECR.ID AND SCENARIOSUITECR.STARTID =
     VCR.ID AND SCNRST.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.SCENARIOSUITERESOURCEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SCENARIOSUITERESOURCE (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT SCSUITER_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKSCSUITERS_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKSCSUITERS_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT SCSUITERS_CKENDIDS CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT SCSUITERS_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONTAINER
     INTEGER NOT NULL, CONSTRAINT SCSUITERS_SCSUITE FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.SCENARIOSUITE ON DELETE CASCADE, ILRKEY VARCHAR(255)
     NOT NULL, VALUE BLOB(52428800))  ;
CREATE INDEX IIBADMIN.SCSUITER_CONTAINE ON IIBADMIN.SCENARIOSUITERESOURCE
     (CONTAINER) ;
CREATE UNIQUE INDEX IIBADMIN.SCSUITERSNAMEUNIQ ON
     IIBADMIN.SCENARIOSUITERESOURCE (CONTAINER, ENDID, ILRKEY, BASELINE) ;
CREATE VIEW IIBADMIN.SCENARIOSUITEAGGRGTD AS SELECT SCNRST.ID,
     SCNRST.ORIGINALID, SCNRST.STARTID, SCNRST.ENDID, SCNRST.TYPE,
     SCNRST.BASELINE, SCNRST.NAME, SCNRST.UUID, SCNRST.RULEPACKAGE,
     SCNRST.DOCUMENTATION, SCNRST.GRP, SCNRST.PROJECT, SCNRST.ENTRYPOINT,
     SCNRST.FORMAT, SCNRST.TESTBASELINE, SCNRST.TESTEXTRACTOR, SCNRSTRSRC.ID AS
     SCENARIOSUITERESOURCE_ID, SCNRSTRSRC.ORIGINALID AS
     SCENARIOSUITERESOURCE_ORIGINALID, SCNRSTRSRC.STARTID AS
     SCENARIOSUITERESOURCE_STARTID, SCNRSTRSRC.ENDID AS
     SCENARIOSUITERESOURCE_ENDID, SCNRSTRSRC.BASELINE AS
     SCENARIOSUITERESOURCE_BASELINE, SCNRSTRSRC.TYPE AS
     SCENARIOSUITERESOURCE_TYPE, SCNRSTRSRC.ILRKEY AS
     SCENARIOSUITERESOURCE_ILRKEY, SCNRSTRSRC.VALUE AS
     SCENARIOSUITERESOURCE_VALUE, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.SCENARIOSUITE SCNRST LEFT OUTER JOIN
     IIBADMIN.SCENARIOSUITERESOURCE SCNRSTRSRC ON SCNRST.ORIGINALID =
     SCNRSTRSRC.CONTAINER AND SCNRST.BASELINE = SCNRSTRSRC.BASELINE AND
     SCNRSTRSRC.STARTID <= SCNRST.STARTID AND SCNRST.ENDID <= SCNRSTRSRC.ENDID,
     IIBADMIN.SCENARIOSUITE SCENARIOSUITECR, IIBADMIN.VERSION VCR,
     IIBADMIN.VERSION VUPDT WHERE SCNRST.ORIGINALID = SCENARIOSUITECR.ID AND
     SCENARIOSUITECR.STARTID = VCR.ID AND SCNRST.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.TASKIDENTITY ORDER ;
CREATE TABLE IIBADMIN.TASK (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE INTEGER
     NOT NULL, CONSTRAINT TASK_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT FKTASK_STARTV
     FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, ENDID
     INTEGER NOT NULL, CONSTRAINT FKTASK_ENDV FOREIGN KEY (ENDID) REFERENCES
     IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT TASK_CKENDIDSTARTI CHECK
     (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL, BASELINE INTEGER NOT
     NULL, CONSTRAINT TASK_BSLN FOREIGN KEY (BASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, DEFINITION CLOB(52428800),
     ADVANCEDPROPERTIES CLOB(52428800), ALGORITHM VARCHAR(30), CONSTRAINT
     TASK_ALGORITHMKIND FOREIGN KEY (ALGORITHM) REFERENCES
     IIBADMIN.ALGORITHMKIND, DYNAMIC CHAR(1), EXITCRITERIA VARCHAR(30),
     CONSTRAINT TASK_EXITCRIT FOREIGN KEY (EXITCRITERIA) REFERENCES
     IIBADMIN.EXITCRITERIAKIND, ORDERING VARCHAR(30), CONSTRAINT
     TASK_ORDERINGKIND FOREIGN KEY (ORDERING) REFERENCES IIBADMIN.ORDERINGKIND,
     ILRSELECT CLOB(52428800), CONTAINER INTEGER NOT NULL, CONSTRAINT
     TASK_RULEFLOW FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.RULEFLOW ON
     DELETE CASCADE, DOCUMENTATION CLOB(52428800), FINALACTIONS CLOB(52428800),
     INITIALACTIONS CLOB(52428800), NAME VARCHAR(255) NOT NULL)  ;
CREATE INDEX IIBADMIN.TASK_CONTAINER ON IIBADMIN.TASK (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.TEMPLATEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.TEMPLATE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT TEMPLATE_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKTEMPLATE_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKTEMPLATE_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     TEMPLATE_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT TEMPLATE_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     TEMPLATE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT TEMPLATE_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT TEMPLATE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, DEFINITION CLOB(52428800),
     DEFINITIONINFO CLOB(52428800), LOCALE VARCHAR(30), RULETYPE VARCHAR(255))
     ;
CREATE INDEX IIBADMIN.TEMPLATE_PRJBRANCH ON IIBADMIN.TEMPLATE (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.TEMPLATENAMEUNIQUE ON IIBADMIN.TEMPLATE
     (RULEPACKAGE, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.TEMPLATEUUIDUNIQUE ON IIBADMIN.TEMPLATE (UUID,
     BASELINE, ENDID) ;
CREATE SEQUENCE IIBADMIN.INITIALVALUEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.INITIALVALUE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT INITIALV_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKINITIA_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKINITIA_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     INITIALVALUE_CKEND CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT INITIALVALUE_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, NAME
     VARCHAR(255), VALUE CLOB(52428800), CONTAINER INTEGER NOT NULL, CONSTRAINT
     INITIALV_TEMPLATE FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.TEMPLATE ON
     DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.INITIALV_CONTAINE ON IIBADMIN.INITIALVALUE (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.RULEARTIFACTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEARTIFACT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT RULEARTI_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKRULEAR_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKRULEAR_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     RULEARTIFACT_CKEND CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT RULEARTIFACT_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     RULEARTI_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, CATEGORIES CLOB(52428800), LOCALE VARCHAR(30), TEMPLATE
     INTEGER, CONSTRAINT RULEARTI_TEMPLATE FOREIGN KEY (TEMPLATE) REFERENCES
     IIBADMIN.TEMPLATE ON DELETE CASCADE, RETURNTYPE CLOB(52428800), NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, RULEPACKAGE INTEGER,
     CONSTRAINT RULEARTI_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION CLOB(52428800), GRP
     VARCHAR(100), PROJECT INTEGER, CONSTRAINT RULEARTI_RULEPROJ FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE, PRIORITY
     VARCHAR(15), ACTIVE CHAR(1), IMPORTS CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULEARTI_PRJBRANC ON IIBADMIN.RULEARTIFACT (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.RULEARNAMEUNIQ ON IIBADMIN.RULEARTIFACT
     (RULEPACKAGE, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.RULEARUUIDUNIQ ON IIBADMIN.RULEARTIFACT (UUID,
     BASELINE, ENDID) ;
CREATE TABLE IIBADMIN.RULEARTIFACTSIBLING (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), EFFECTIVEDATE TIMESTAMP, EXPIRATIONDATE TIMESTAMP, STATUS
     VARCHAR(30) NOT NULL, CONSTRAINT RULEARTI_STATUS FOREIGN KEY (STATUS)
     REFERENCES IIBADMIN.STATUS)  ;
ALTER TABLE IIBADMIN.RULEARTIFACTSIBLING ADD CONSTRAINT FKRULEARTIFACT FOREIGN
     KEY (ID) REFERENCES IIBADMIN.RULEARTIFACT ON DELETE CASCADE ;
CREATE SEQUENCE IIBADMIN.ACTIVITYCOMMENTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ACTIVITYCOMMENT (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT ACOMMENT_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, BASELINE INTEGER, CONSTRAINT BASELINEREF
     FOREIGN KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     SOURCEARTIFACT INTEGER, SOURCEARTIFACTID INTEGER, SOURCEARTIFACTTYPE
     INTEGER, SOURCERULEARTIFACT INTEGER, CONSTRAINT ACOMMENT_RULEARTI FOREIGN
     KEY (SOURCERULEARTIFACT) REFERENCES IIBADMIN.RULEARTIFACT ON DELETE
     CASCADE, SOURCERULEARTIFACTID INTEGER, ADDITIONALDETAILS VARCHAR(255),
     FORUSER VARCHAR(100), MAJORVERSION INTEGER, MINORVERSION INTEGER, NEWDATE
     TIMESTAMP, NEWDESC CLOB(52428800), NEWPROPERTY VARCHAR(255), OLDDATE
     TIMESTAMP, OLDDESC CLOB(52428800), OLDNAME VARCHAR(1000), OLDPROPERTY
     VARCHAR(255), SOURCEBRANCH INTEGER, CONSTRAINT ACOMMENT_BSLN FOREIGN KEY
     (SOURCEBRANCH) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     SOURCERULEPROJECT INTEGER, CONSTRAINT ACOMMENT_RULEPROJ FOREIGN KEY
     (SOURCERULEPROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE,
     UPDATETYPE VARCHAR(30), CONSTRAINT ACOMMENT_UPDATETY FOREIGN KEY
     (UPDATETYPE) REFERENCES IIBADMIN.UPDATETYPEKIND, VERSIONCOMMENT
     CLOB(10000), PARENT INTEGER, CONSTRAINT ACOMMENT_PARENT FOREIGN KEY
     (PARENT) REFERENCES IIBADMIN.ACTIVITYCOMMENT ON DELETE CASCADE, TEXT
     CLOB(10000), CREATEDBY VARCHAR(100), CREATEDON TIMESTAMP, LASTCHANGEDBY
     VARCHAR(100), LASTCHANGEDON TIMESTAMP)  ;
CREATE TRIGGER IIBADMIN.ACMTBSLNCHECK
     BEFORE INSERT ON IIBADMIN.ACTIVITYCOMMENT
     REFERENCING NEW AS N
     FOR EACH ROW
     WHEN (N.SOURCERULEARTIFACT IS NOT NULL AND
     (SELECT COUNT(IIBADMIN.RULEARTIFACT.ID)
     FROM IIBADMIN.BASELINE, IIBADMIN.RULEARTIFACT
     WHERE IIBADMIN.BASELINE.ID = N.BASELINE AND
     IIBADMIN.RULEARTIFACT.ID = N.SOURCERULEARTIFACT AND
     IIBADMIN.BASELINE.CONTAINER =
     IIBADMIN.RULEARTIFACT.PROJECT) = 0)
     SIGNAL SQLSTATE '75000' SET MESSAGE_TEXT =
     'Invalid baseline for ACTIVITYCOMMENT.SOURCERULEARTIFACT value.';
CREATE SEQUENCE IIBADMIN.ACTIVITYCOMMENTACCESSIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ACTIVITYCOMMENTACCESS (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT ACMTACCE_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, BRANCH INTEGER, CONSTRAINT
     ACMTACCES_BSLN FOREIGN KEY (BRANCH) REFERENCES IIBADMIN.BASELINE ON DELETE
     CASCADE, PROJECT INTEGER, CONSTRAINT ACMTACCE_RULEPROJ FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE, CONTAINER
     INTEGER NOT NULL, CONSTRAINT ACMTACCES_ACOMMENT FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.ACTIVITYCOMMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.ACMTACCE_CONTAINE ON IIBADMIN.ACTIVITYCOMMENTACCESS
     (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.ACMTATCHMTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ACTIVITYCOMMENTATTACHMENT (ID INTEGER NOT NULL, PRIMARY
     KEY (ID), TYPE INTEGER NOT NULL, CONSTRAINT ACMTATCH_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, CONTENTTYPE VARCHAR(750), DATA
     BLOB(52428800), NAME VARCHAR(1000), CONTAINER INTEGER NOT NULL, CONSTRAINT
     ACMTATCH_ACOMMENT FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.ACTIVITYCOMMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.ACMTATCH_CONTAINE ON IIBADMIN.ACTIVITYCOMMENTATTACHMENT
     (CONTAINER) ;
CREATE INDEX IIBADMIN.ACTIVITYCOMMENTDATEIDX ON IIBADMIN.ACTIVITYCOMMENT (TYPE,
     CREATEDON) ;
CREATE SEQUENCE IIBADMIN.ACTIVITYCOMMENTLINKIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ACTIVITYCOMMENTLINK (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT ACMTLINK_METAMODEL FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, URL CLOB(10000), CONTAINER INTEGER
     NOT NULL, CONSTRAINT ACMTLINK_ACOMMENT FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.ACTIVITYCOMMENT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.ACMTLINK_CONTAINER ON IIBADMIN.ACTIVITYCOMMENTLINK
     (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.ACTIVITYSUBSCRIPTIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ACTIVITYSUBSCRIPTION (ID INTEGER NOT NULL, PRIMARY KEY
     (ID), TYPE INTEGER NOT NULL, CONSTRAINT ACMTSUBS_METAMODE FOREIGN KEY
     (TYPE) REFERENCES IIBADMIN.METAMODEL, SOURCEARTIFACT INTEGER,
     SOURCEARTIFACTTYPE INTEGER, SRCBRANCH INTEGER, CONSTRAINT ACMTSUBSCR_BSLN
     FOREIGN KEY (SRCBRANCH) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     SRCRULE INTEGER, CONSTRAINT ACMTSUBS_RULEARTI FOREIGN KEY (SRCRULE)
     REFERENCES IIBADMIN.RULEARTIFACT ON DELETE CASCADE, SRCPROJECT INTEGER,
     CONSTRAINT ACMTSUBS_RULEPROJ FOREIGN KEY (SRCPROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, USERNAME VARCHAR(100))  ;
CREATE UNIQUE INDEX IIBADMIN.ACMTSUBSCRUNIQUE ON IIBADMIN.ACTIVITYSUBSCRIPTION
     (USERNAME, SRCBRANCH, SRCPROJECT, SRCRULE, SOURCEARTIFACT,
     SOURCEARTIFACTTYPE) ;
CREATE SEQUENCE IIBADMIN.ARGUMENTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.ARGUMENT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT ARGUMENT_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKARGUMENT_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKARGUMENT_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     ARGUMENT_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT ARGUMENT_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, ARGUMENTTYPE
     CLOB(52428800) NOT NULL, NAME VARCHAR(255) NOT NULL, ILRORDER INTEGER NOT
     NULL, CONTAINER INTEGER NOT NULL, CONSTRAINT ARGUMENT_RULEARTI FOREIGN KEY
     (CONTAINER) REFERENCES IIBADMIN.RULEARTIFACT ON DELETE CASCADE, CONSTRAINT
     ARGUMEILRORDERUNIQ UNIQUE (ENDID, CONTAINER, ILRORDER, BASELINE))  ;
CREATE INDEX IIBADMIN.ARGUMENT_CONTAINER ON IIBADMIN.ARGUMENT (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.DEFINITIONIDENTITY ORDER ;
CREATE TABLE IIBADMIN.DEFINITION (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT DEFINITI_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKDEFINI_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKDEFINITION_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT DEFINITION_CKENDID CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT DEFINITION_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, BODY
     CLOB(52428800), INFO CLOB(52428800), CONTAINER INTEGER NOT NULL,
     CONSTRAINT DEFINITI_RULEARTI FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.RULEARTIFACT ON DELETE CASCADE)  ;
CREATE UNIQUE INDEX IIBADMIN.DEFINICONTAIUNIQ ON IIBADMIN.DEFINITION
     (CONTAINER, ENDID, BASELINE) ;
CREATE SEQUENCE IIBADMIN.OVERRIDDENRULEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.OVERRIDDENRULE (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT OVERRIDD_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKOVERRI_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKOVERRI_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     OVERRIDDENRULE_CKE CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT OVERRIDD_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, ILRRULE INTEGER,
     CONSTRAINT OVERWRITTENRULEREF FOREIGN KEY (ILRRULE) REFERENCES
     IIBADMIN.RULEARTIFACT ON DELETE CASCADE, CONTAINER INTEGER NOT NULL,
     CONSTRAINT OVERRIDD_RULEARTI FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.RULEARTIFACT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.OVERRIDD_CONTAINE ON IIBADMIN.OVERRIDDENRULE (CONTAINER)
     ;
CREATE VIEW IIBADMIN.RULEARTIFACTSTDXTD AS SELECT RLRTFCT.ID,
     RLRTFCT.ORIGINALID, RLRTFCT.STARTID, RLRTFCT.ENDID, RLRTFCT.BASELINE,
     RLRTFCT.TYPE, RLRTFCT.CATEGORIES, RLRTFCT.LOCALE, RLRTFCT.TEMPLATE,
     RLRTFCT.RETURNTYPE, RLRTFCT.NAME, RLRTFCT.UUID, RLRTFCT.RULEPACKAGE,
     RLRTFCT.DOCUMENTATION, RLRTFCT.GRP, RLRTFCT.PROJECT, RLRTFCT.PRIORITY,
     RLRTFCT.ACTIVE, RLRTFCT.IMPORTS, RLRTFCTSBLNG.EFFECTIVEDATE,
     RLRTFCTSBLNG.EXPIRATIONDATE, RLRTFCTSBLNG.STATUS FROM
     IIBADMIN.RULEARTIFACTSIBLING RLRTFCTSBLNG, IIBADMIN.RULEARTIFACT RLRTFCT
     WHERE RLRTFCT.ID = RLRTFCTSBLNG.ID ;
CREATE VIEW IIBADMIN.RULEARTIFACTDTLS AS SELECT RLRTFCT.ID, RLRTFCT.ORIGINALID,
     RLRTFCT.STARTID, RLRTFCT.ENDID, RLRTFCT.BASELINE, RLRTFCT.TYPE,
     RLRTFCT.CATEGORIES, RLRTFCT.LOCALE, RLRTFCT.TEMPLATE, RLRTFCT.RETURNTYPE,
     RLRTFCT.NAME, RLRTFCT.UUID, RLRTFCT.RULEPACKAGE, RLRTFCT.DOCUMENTATION,
     RLRTFCT.GRP, RLRTFCT.PROJECT, RLRTFCT.PRIORITY, RLRTFCT.ACTIVE,
     RLRTFCT.IMPORTS, RLRTFCTSBLNG.EFFECTIVEDATE, RLRTFCTSBLNG.EXPIRATIONDATE,
     RLRTFCTSBLNG.STATUS, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.RULEARTIFACTSIBLING RLRTFCTSBLNG, IIBADMIN.RULEARTIFACT RLRTFCT,
     IIBADMIN.RULEARTIFACT RULEARTIFACTCR, IIBADMIN.VERSION VCR,
     IIBADMIN.VERSION VUPDT WHERE RLRTFCT.ID = RLRTFCTSBLNG.ID AND
     RLRTFCT.ORIGINALID = RULEARTIFACTCR.ID AND RULEARTIFACTCR.STARTID = VCR.ID
     AND RLRTFCT.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.CHANGEVIEW AS SELECT RLRTFCT.ID, RLRTFCT.ORIGINALID,
     RLRTFCT.STARTID, RLRTFCT.ENDID, BSLN.ID AS BASELINE, BSLN.PARENT,
     RLRTFCT.TYPE, RLRTFCT.NAME, VERSIONCR.USERNAME AS CREATEDBY,
     VERSIONCR.VERSDATE AS CREATEDON, VERSIONUPDT.USERNAME AS LASTCHANGEDBY,
     VERSIONUPDT.VERSDATE AS LASTCHANGEDON, RLRTFCT.PROJECT, RLRTFCT.GRP,
     VERSIONUPDT.DELETED, CAST(NULL AS TIMESTAMP) AS LASTELTCHANGEDON FROM
     IIBADMIN.RULEARTIFACT RLRTFCT, IIBADMIN.RULEARTIFACT RULEARTIFACTCR,
     IIBADMIN.VERSION VERSIONCR, IIBADMIN.VERSION VERSIONUPDT,
     IIBADMIN.BASELINE BSLN WHERE RULEARTIFACTCR.ID = RLRTFCT.ORIGINALID AND
     RULEARTIFACTCR.STARTID = VERSIONCR.ID AND VERSIONCR.SYSVERS = 'F' AND
     BSLN.ID = RLRTFCT.BASELINE AND BSLN.BASELINEKIND = 'Branch' AND
     ((RLRTFCT.STARTID = VERSIONUPDT.ID AND VERSIONUPDT.SYSVERS = 'F') OR
     (RLRTFCT.ENDID = VERSIONUPDT.ID AND VERSIONUPDT.DELETED = 'T')) UNION
     SELECT BSLN.ID, BSLN.ID AS ORIGINALID, BSLN.MAXVERSIONID AS STARTID,
     CAST(NULL AS INTEGER) AS ENDID, BSLN.ID AS BASELINE, BSLN.PARENT,
     BSLN.TYPE, BSLN.NAME, BSLN.CREATEDBY, BSLN.CREATEDON, BSLN.LASTCHANGEDBY,
     BSLN.LASTCHANGEDON, BSLN.CONTAINER AS PROJECT, CAST(NULL AS VARCHAR(100))
     AS GRP, 'F' AS DELETED, IIBADMIN.VERSION.VERSDATE AS LASTELTCHANGEDON FROM
     IIBADMIN.BASELINE BSLN, IIBADMIN.VERSION WHERE BSLN.MAXVERSIONID =
     IIBADMIN.VERSION.ID AND BSLN.BASELINEKIND = 'Standard' ;
CREATE SEQUENCE IIBADMIN.RULEARTIFACTTAGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.RULEARTIFACTTAG (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT RULARTTA_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKRULARTTAG_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKRULARTTAG_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT RULARTTAG_CKENDIDS CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT RULARTTAG_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONTAINER
     INTEGER NOT NULL, CONSTRAINT RULARTTA_RULEARTI FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.RULEARTIFACT ON DELETE CASCADE, NAME VARCHAR(255) NOT
     NULL, VALUE CLOB(52428800))  ;
CREATE INDEX IIBADMIN.RULARTTA_CONTAINE ON IIBADMIN.RULEARTIFACTTAG (CONTAINER)
     ;
CREATE UNIQUE INDEX IIBADMIN.RULARTTAGNAMEUNIQ ON IIBADMIN.RULEARTIFACTTAG
     (CONTAINER, ENDID, NAME, BASELINE) ;
CREATE VIEW IIBADMIN.RULEARTIFACTAGGRGTD AS SELECT RLRTFCT.ID,
     RLRTFCT.ORIGINALID, RLRTFCT.STARTID, RLRTFCT.ENDID, RLRTFCT.TYPE,
     RLRTFCT.BASELINE, RLRTFCT.CATEGORIES, RLRTFCT.LOCALE, RLRTFCT.TEMPLATE,
     RLRTFCT.RETURNTYPE, RLRTFCT.NAME, RLRTFCT.UUID, RLRTFCT.RULEPACKAGE,
     RLRTFCT.DOCUMENTATION, RLRTFCT.GRP, RLRTFCT.PROJECT, RLRTFCT.PRIORITY,
     RLRTFCT.ACTIVE, RLRTFCT.IMPORTS, RLRTFCTSBLNG.EFFECTIVEDATE,
     RLRTFCTSBLNG.EXPIRATIONDATE, RLRTFCTSBLNG.STATUS, RGMNT.ID AS ARGUMENT_ID,
     RGMNT.ORIGINALID AS ARGUMENT_ORIGINALID, RGMNT.STARTID AS
     ARGUMENT_STARTID, RGMNT.ENDID AS ARGUMENT_ENDID, RGMNT.BASELINE AS
     ARGUMENT_BASELINE, RGMNT.ARGUMENTTYPE AS ARGUMENT_ARGUMENTTYPE, RGMNT.NAME
     AS ARGUMENT_NAME, RGMNT.ILRORDER AS ARGUMENT_ILRORDER, RGMNT.TYPE AS
     ARGUMENT_TYPE, VRRDDNRL.ID AS OVERRIDDENRULE_ID, VRRDDNRL.ORIGINALID AS
     OVERRIDDENRULE_ORIGINALID, VRRDDNRL.STARTID AS OVERRIDDENRULE_STARTID,
     VRRDDNRL.ENDID AS OVERRIDDENRULE_ENDID, VRRDDNRL.BASELINE AS
     OVERRIDDENRULE_BASELINE, VRRDDNRL.TYPE AS OVERRIDDENRULE_TYPE,
     VRRDDNRL.ILRRULE AS OVERRIDDENRULE_ILRRULE, DFNTN.ID AS DEFINITION_ID,
     DFNTN.ORIGINALID AS DEFINITION_ORIGINALID, DFNTN.STARTID AS
     DEFINITION_STARTID, DFNTN.ENDID AS DEFINITION_ENDID, DFNTN.BASELINE AS
     DEFINITION_BASELINE, DFNTN.BODY AS DEFINITION_BODY, DFNTN.INFO AS
     DEFINITION_INFO, DFNTN.TYPE AS DEFINITION_TYPE, RLRTFCTTG.ID AS
     RULEARTIFACTTAG_ID, RLRTFCTTG.ORIGINALID AS RULEARTIFACTTAG_ORIGINALID,
     RLRTFCTTG.STARTID AS RULEARTIFACTTAG_STARTID, RLRTFCTTG.ENDID AS
     RULEARTIFACTTAG_ENDID, RLRTFCTTG.BASELINE AS RULEARTIFACTTAG_BASELINE,
     RLRTFCTTG.TYPE AS RULEARTIFACTTAG_TYPE, RLRTFCTTG.NAME AS
     RULEARTIFACTTAG_NAME, RLRTFCTTG.VALUE AS RULEARTIFACTTAG_VALUE,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.RULEARTIFACTSIBLING RLRTFCTSBLNG, IIBADMIN.RULEARTIFACT RLRTFCT
     LEFT OUTER JOIN IIBADMIN.ARGUMENT RGMNT ON RLRTFCT.ORIGINALID =
     RGMNT.CONTAINER AND RLRTFCT.BASELINE = RGMNT.BASELINE AND RGMNT.STARTID <=
     RLRTFCT.STARTID AND RLRTFCT.ENDID <= RGMNT.ENDID LEFT OUTER JOIN
     IIBADMIN.OVERRIDDENRULE VRRDDNRL ON RLRTFCT.ORIGINALID =
     VRRDDNRL.CONTAINER AND RLRTFCT.BASELINE = VRRDDNRL.BASELINE AND
     VRRDDNRL.STARTID <= RLRTFCT.STARTID AND RLRTFCT.ENDID <= VRRDDNRL.ENDID
     LEFT OUTER JOIN IIBADMIN.DEFINITION DFNTN ON RLRTFCT.ORIGINALID =
     DFNTN.CONTAINER AND RLRTFCT.BASELINE = DFNTN.BASELINE AND DFNTN.STARTID <=
     RLRTFCT.STARTID AND RLRTFCT.ENDID <= DFNTN.ENDID LEFT OUTER JOIN
     IIBADMIN.RULEARTIFACTTAG RLRTFCTTG ON RLRTFCT.ORIGINALID =
     RLRTFCTTG.CONTAINER AND RLRTFCT.BASELINE = RLRTFCTTG.BASELINE AND
     RLRTFCTTG.STARTID <= RLRTFCT.STARTID AND RLRTFCT.ENDID <= RLRTFCTTG.ENDID,
     IIBADMIN.RULEARTIFACT RULEARTIFACTCR, IIBADMIN.VERSION VCR,
     IIBADMIN.VERSION VUPDT WHERE RLRTFCT.ID = RLRTFCTSBLNG.ID AND
     RLRTFCT.ORIGINALID = RULEARTIFACTCR.ID AND RULEARTIFACTCR.STARTID = VCR.ID
     AND RLRTFCT.STARTID = VUPDT.ID ;
CREATE UNIQUE INDEX IIBADMIN.RULEARTIFVERSION ON IIBADMIN.RULEARTIFACT
     (ORIGINALID, TYPE, STARTID, ENDID, RULEPACKAGE) ;
CREATE SEQUENCE IIBADMIN.SCOPEELEMENTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.SCOPEELEMENT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT SCOPEELE_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKSCOPEE_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKSCOPEE_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     SCOPEELEMENT_CKEND CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT SCOPEELEMENT_BSLN FOREIGN KEY
     (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONTAINER
     INTEGER NOT NULL, CONSTRAINT SCOPEELE_RULEFLOW FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.RULEFLOW ON DELETE CASCADE, ILRORDER INTEGER, ILRRULE
     INTEGER, CONSTRAINT SCOPEELE_RULEARTI FOREIGN KEY (ILRRULE) REFERENCES
     IIBADMIN.RULEARTIFACT ON DELETE CASCADE, RULEPACKAGE INTEGER, CONSTRAINT
     SCOPEELE_RULEPACK FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, RULETASKNAME VARCHAR(255))  ;
CREATE INDEX IIBADMIN.SCOPEELE_CONTAINE ON IIBADMIN.SCOPEELEMENT (CONTAINER) ;
CREATE VIEW IIBADMIN.RULEFLOWAGGRGTD AS SELECT RLFLW.ID, RLFLW.ORIGINALID,
     RLFLW.STARTID, RLFLW.ENDID, RLFLW.TYPE, RLFLW.BASELINE, RLFLW.NAME,
     RLFLW.UUID, RLFLW.RULEPACKAGE, RLFLW.DOCUMENTATION, RLFLW.GRP,
     RLFLW.PROJECT, RLFLW.BODY, RLFLW.DIAGRAM, RLFLW.FINALACTIONS,
     RLFLW.IMPORTS, RLFLW.INITIALACTIONS, RLFLW.LOCALE, RLFLW.MAINFLOWTASK,
     SCPLMNT.ID AS SCOPEELEMENT_ID, SCPLMNT.ORIGINALID AS
     SCOPEELEMENT_ORIGINALID, SCPLMNT.STARTID AS SCOPEELEMENT_STARTID,
     SCPLMNT.ENDID AS SCOPEELEMENT_ENDID, SCPLMNT.BASELINE AS
     SCOPEELEMENT_BASELINE, SCPLMNT.TYPE AS SCOPEELEMENT_TYPE, SCPLMNT.ILRORDER
     AS SCOPEELEMENT_ILRORDER, SCPLMNT.ILRRULE AS SCOPEELEMENT_ILRRULE,
     SCPLMNT.RULEPACKAGE AS SCOPEELEMENT_RULEPACKAGE, SCPLMNT.RULETASKNAME AS
     SCOPEELEMENT_RULETASKNAME, RLFLWTG.ID AS RULEFLOWTAG_ID,
     RLFLWTG.ORIGINALID AS RULEFLOWTAG_ORIGINALID, RLFLWTG.STARTID AS
     RULEFLOWTAG_STARTID, RLFLWTG.ENDID AS RULEFLOWTAG_ENDID, RLFLWTG.BASELINE
     AS RULEFLOWTAG_BASELINE, RLFLWTG.TYPE AS RULEFLOWTAG_TYPE, RLFLWTG.NAME AS
     RULEFLOWTAG_NAME, RLFLWTG.VALUE AS RULEFLOWTAG_VALUE, TSK.ID AS TASK_ID,
     TSK.ORIGINALID AS TASK_ORIGINALID, TSK.STARTID AS TASK_STARTID, TSK.ENDID
     AS TASK_ENDID, TSK.BASELINE AS TASK_BASELINE, TSK.TYPE AS TASK_TYPE,
     TSK.DEFINITION AS TASK_DEFINITION, TSK.ADVANCEDPROPERTIES AS
     TASK_ADVANCEDPROPERTIES, TSK.ALGORITHM AS TASK_ALGORITHM, TSK.DYNAMIC AS
     TASK_DYNAMIC, TSK.EXITCRITERIA AS TASK_EXITCRITERIA, TSK.ORDERING AS
     TASK_ORDERING, TSK.ILRSELECT AS TASK_ILRSELECT, TSK.DOCUMENTATION AS
     TASK_DOCUMENTATION, TSK.FINALACTIONS AS TASK_FINALACTIONS,
     TSK.INITIALACTIONS AS TASK_INITIALACTIONS, TSK.NAME AS TASK_NAME,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.RULEFLOWSIBLING RLFLWSBLNG, IIBADMIN.RULEFLOW RLFLW LEFT OUTER
     JOIN IIBADMIN.SCOPEELEMENT SCPLMNT ON RLFLW.ORIGINALID = SCPLMNT.CONTAINER
     AND RLFLW.BASELINE = SCPLMNT.BASELINE AND SCPLMNT.STARTID <= RLFLW.STARTID
     AND RLFLW.ENDID <= SCPLMNT.ENDID LEFT OUTER JOIN IIBADMIN.RULEFLOWTAG
     RLFLWTG ON RLFLW.ORIGINALID = RLFLWTG.CONTAINER AND RLFLW.BASELINE =
     RLFLWTG.BASELINE AND RLFLWTG.STARTID <= RLFLW.STARTID AND RLFLW.ENDID <=
     RLFLWTG.ENDID LEFT OUTER JOIN IIBADMIN.TASK TSK ON RLFLW.ORIGINALID =
     TSK.CONTAINER AND RLFLW.BASELINE = TSK.BASELINE AND TSK.STARTID <=
     RLFLW.STARTID AND RLFLW.ENDID <= TSK.ENDID, IIBADMIN.RULEFLOW RULEFLOWCR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE RLFLW.ID =
     RLFLWSBLNG.ID AND RLFLW.ORIGINALID = RULEFLOWCR.ID AND RULEFLOWCR.STARTID
     = VCR.ID AND RLFLW.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.TEMPLATEAGGRGTD AS SELECT TMPLT.ID, TMPLT.ORIGINALID,
     TMPLT.STARTID, TMPLT.ENDID, TMPLT.TYPE, TMPLT.BASELINE, TMPLT.NAME,
     TMPLT.UUID, TMPLT.RULEPACKAGE, TMPLT.DOCUMENTATION, TMPLT.GRP,
     TMPLT.PROJECT, TMPLT.DEFINITION, TMPLT.DEFINITIONINFO, TMPLT.LOCALE,
     TMPLT.RULETYPE, NTLVL.ID AS INITIALVALUE_ID, NTLVL.ORIGINALID AS
     INITIALVALUE_ORIGINALID, NTLVL.STARTID AS INITIALVALUE_STARTID,
     NTLVL.ENDID AS INITIALVALUE_ENDID, NTLVL.BASELINE AS
     INITIALVALUE_BASELINE, NTLVL.TYPE AS INITIALVALUE_TYPE, NTLVL.NAME AS
     INITIALVALUE_NAME, NTLVL.VALUE AS INITIALVALUE_VALUE, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.TEMPLATE TMPLT LEFT OUTER
     JOIN IIBADMIN.INITIALVALUE NTLVL ON TMPLT.ORIGINALID = NTLVL.CONTAINER AND
     TMPLT.BASELINE = NTLVL.BASELINE AND NTLVL.STARTID <= TMPLT.STARTID AND
     TMPLT.ENDID <= NTLVL.ENDID, IIBADMIN.TEMPLATE TEMPLATECR, IIBADMIN.VERSION
     VCR, IIBADMIN.VERSION VUPDT WHERE TMPLT.ORIGINALID = TEMPLATECR.ID AND
     TEMPLATECR.STARTID = VCR.ID AND TMPLT.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.TEMPLATEDTLS AS SELECT TMPLT.ID, TMPLT.ORIGINALID,
     TMPLT.STARTID, TMPLT.ENDID, TMPLT.BASELINE, TMPLT.TYPE, TMPLT.NAME,
     TMPLT.UUID, TMPLT.RULEPACKAGE, TMPLT.DOCUMENTATION, TMPLT.GRP,
     TMPLT.PROJECT, TMPLT.DEFINITION, TMPLT.DEFINITIONINFO, TMPLT.LOCALE,
     TMPLT.RULETYPE, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.TEMPLATE TMPLT, IIBADMIN.TEMPLATE TEMPLATECR, IIBADMIN.VERSION
     VCR, IIBADMIN.VERSION VUPDT WHERE TMPLT.ORIGINALID = TEMPLATECR.ID AND
     TEMPLATECR.STARTID = VCR.ID AND TMPLT.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VARIABLESETIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VARIABLESET (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VARIABLE_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVARIAB_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVARIABLESET_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT VARIABLESET_CKENDI CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT VARIABLESET_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VARIABLE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VARIABLE_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VARIABLE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VARIABLE_PRJBRANC ON IIBADMIN.VARIABLESET (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VARIABNAMEUNIQ ON IIBADMIN.VARIABLESET
     (RULEPACKAGE, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VARIABUUIDUNIQ ON IIBADMIN.VARIABLESET (UUID,
     BASELINE, ENDID) ;
CREATE SEQUENCE IIBADMIN.OPERATIONVARIABLEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.OPERATIONVARIABLE (ID INTEGER NOT NULL, PRIMARY KEY (ID),
     TYPE INTEGER NOT NULL, CONSTRAINT OPVARIAB_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKOPVARI_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKOPVARIABLE_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT OPVARIABLE_CKENDID CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT OPVARIABLE_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONTAINER
     INTEGER NOT NULL, CONSTRAINT OPVARIAB_OPERATIO FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE, DIRECTION VARCHAR(30),
     CONSTRAINT OPVARIAB_DIRECTIO FOREIGN KEY (DIRECTION) REFERENCES
     IIBADMIN.DIRECTIONKIND, VARIABLENAME VARCHAR(255), VARIABLESET INTEGER,
     CONSTRAINT OPVARIAB_VARIABLE FOREIGN KEY (VARIABLESET) REFERENCES
     IIBADMIN.VARIABLESET ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.OPVARIAB_CONTAINE ON IIBADMIN.OPERATIONVARIABLE
     (CONTAINER) ;
CREATE VIEW IIBADMIN.OPERATIONAGGRGTD AS SELECT PRTN.ID, PRTN.ORIGINALID,
     PRTN.STARTID, PRTN.ENDID, PRTN.TYPE, PRTN.BASELINE, PRTN.NAME, PRTN.UUID,
     PRTN.RULEPACKAGE, PRTN.DOCUMENTATION, PRTN.GRP, PRTN.PROJECT,
     PRTN.ADVANCEDPROPERTIES, PRTN.BUSINESSDISPLAYNAME, PRTN.DESCRIPTION,
     PRTN.ENGINECONFIGURATIONFILE, PRTN.EXTRACTOR, PRTN.RULEFLOW,
     PRTN.RULESETNAME, PRTN.RULESETPROPERTIES, PRTN.TARGETRULEPROJECT,
     PRTN.USINGEXTRACTOR, PRTN.USINGRULEFLOW, PRTNVRBL.ID AS
     OPERATIONVARIABLE_ID, PRTNVRBL.ORIGINALID AS OPERATIONVARIABLE_ORIGINALID,
     PRTNVRBL.STARTID AS OPERATIONVARIABLE_STARTID, PRTNVRBL.ENDID AS
     OPERATIONVARIABLE_ENDID, PRTNVRBL.BASELINE AS OPERATIONVARIABLE_BASELINE,
     PRTNVRBL.TYPE AS OPERATIONVARIABLE_TYPE, PRTNVRBL.DIRECTION AS
     OPERATIONVARIABLE_DIRECTION, PRTNVRBL.VARIABLENAME AS
     OPERATIONVARIABLE_VARIABLENAME, PRTNVRBL.VARIABLESET AS
     OPERATIONVARIABLE_VARIABLESET, PRTNTG.ID AS OPERATIONTAG_ID,
     PRTNTG.ORIGINALID AS OPERATIONTAG_ORIGINALID, PRTNTG.STARTID AS
     OPERATIONTAG_STARTID, PRTNTG.ENDID AS OPERATIONTAG_ENDID, PRTNTG.BASELINE
     AS OPERATIONTAG_BASELINE, PRTNTG.TYPE AS OPERATIONTAG_TYPE, PRTNTG.NAME AS
     OPERATIONTAG_NAME, PRTNTG.VALUE AS OPERATIONTAG_VALUE, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.OPERATION PRTN LEFT OUTER
     JOIN IIBADMIN.OPERATIONVARIABLE PRTNVRBL ON PRTN.ORIGINALID =
     PRTNVRBL.CONTAINER AND PRTN.BASELINE = PRTNVRBL.BASELINE AND
     PRTNVRBL.STARTID <= PRTN.STARTID AND PRTN.ENDID <= PRTNVRBL.ENDID LEFT
     OUTER JOIN IIBADMIN.OPERATIONTAG PRTNTG ON PRTN.ORIGINALID =
     PRTNTG.CONTAINER AND PRTN.BASELINE = PRTNTG.BASELINE AND PRTNTG.STARTID <=
     PRTN.STARTID AND PRTN.ENDID <= PRTNTG.ENDID, IIBADMIN.OPERATION
     OPERATIONCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     PRTN.ORIGINALID = OPERATIONCR.ID AND OPERATIONCR.STARTID = VCR.ID AND
     PRTN.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VARIABLEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VARIABLE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VARIABLE_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVARIABLE_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVARIABLE_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     VARIABLE_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT VARIABLE_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, BOMTYPE CLOB(52428800) NOT
     NULL, INITIALVALUE CLOB(52428800), NAME VARCHAR(255) NOT NULL,
     VERBALIZATION CLOB(52428800), CONTAINER INTEGER NOT NULL, CONSTRAINT
     VARIABLE_VARIABLE FOREIGN KEY (CONTAINER) REFERENCES IIBADMIN.VARIABLESET
     ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VARIABLE_CONTAINER ON IIBADMIN.VARIABLE (CONTAINER) ;
CREATE VIEW IIBADMIN.VARIABLESETAGGRGTD AS SELECT VRBLST.ID, VRBLST.ORIGINALID,
     VRBLST.STARTID, VRBLST.ENDID, VRBLST.TYPE, VRBLST.BASELINE, VRBLST.NAME,
     VRBLST.UUID, VRBLST.RULEPACKAGE, VRBLST.DOCUMENTATION, VRBLST.GRP,
     VRBLST.PROJECT, VRBL.ID AS VARIABLE_ID, VRBL.ORIGINALID AS
     VARIABLE_ORIGINALID, VRBL.STARTID AS VARIABLE_STARTID, VRBL.ENDID AS
     VARIABLE_ENDID, VRBL.BASELINE AS VARIABLE_BASELINE, VRBL.TYPE AS
     VARIABLE_TYPE, VRBL.BOMTYPE AS VARIABLE_BOMTYPE, VRBL.INITIALVALUE AS
     VARIABLE_INITIALVALUE, VRBL.NAME AS VARIABLE_NAME, VRBL.VERBALIZATION AS
     VARIABLE_VERBALIZATION, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.VARIABLESET VRBLST LEFT OUTER JOIN
     IIBADMIN.VARIABLE VRBL ON VRBLST.ORIGINALID = VRBL.CONTAINER AND
     VRBLST.BASELINE = VRBL.BASELINE AND VRBL.STARTID <= VRBLST.STARTID AND
     VRBLST.ENDID <= VRBL.ENDID, IIBADMIN.VARIABLESET VARIABLESETCR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VRBLST.ORIGINALID =
     VARIABLESETCR.ID AND VARIABLESETCR.STARTID = VCR.ID AND VRBLST.STARTID =
     VUPDT.ID ;
CREATE VIEW IIBADMIN.VARIABLESETDTLS AS SELECT VRBLST.ID, VRBLST.ORIGINALID,
     VRBLST.STARTID, VRBLST.ENDID, VRBLST.BASELINE, VRBLST.TYPE, VRBLST.NAME,
     VRBLST.UUID, VRBLST.RULEPACKAGE, VRBLST.DOCUMENTATION, VRBLST.GRP,
     VRBLST.PROJECT, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.VARIABLESET VRBLST, IIBADMIN.VARIABLESET VARIABLESETCR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VRBLST.ORIGINALID =
     VARIABLESETCR.ID AND VARIABLESETCR.STARTID = VCR.ID AND VRBLST.STARTID =
     VUPDT.ID ;
CREATE INDEX IIBADMIN.VERSIONELT ON IIBADMIN.VERSION (ELTORIGINALID, TYPE) ;
CREATE INDEX IIBADMIN.VERSION_PRJBRANCH ON IIBADMIN.VERSION (PROJECT, BASELINE,
     TYPE) ;
CREATE SEQUENCE IIBADMIN.VOCABULARYIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VOCABULARY (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VOCABULA_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVOCABU_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVOCABULARY_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT VOCABULARY_CKENDID CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT VOCABULARY_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VOCABULA_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VOCABULA_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VOCABULA_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, BODY CLOB(52428800), LOCALE
     VARCHAR(30))  ;
CREATE INDEX IIBADMIN.VOCABULA_PRJBRANC ON IIBADMIN.VOCABULARY (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VOCABULARYNAMEUNIQ ON IIBADMIN.VOCABULARY
     (RULEPACKAGE, BASELINE, ENDID, NAME, LOCALE) ;
CREATE UNIQUE INDEX IIBADMIN.VOCABULARYUUIDUNIQ ON IIBADMIN.VOCABULARY (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.VOCABULARYDTLS AS SELECT VCBLRY.ID, VCBLRY.ORIGINALID,
     VCBLRY.STARTID, VCBLRY.ENDID, VCBLRY.BASELINE, VCBLRY.TYPE, VCBLRY.NAME,
     VCBLRY.UUID, VCBLRY.RULEPACKAGE, VCBLRY.DOCUMENTATION, VCBLRY.GRP,
     VCBLRY.PROJECT, VCBLRY.BODY, VCBLRY.LOCALE, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME
     AS LASTCHANGEDBY FROM IIBADMIN.VOCABULARY VCBLRY, IIBADMIN.VOCABULARY
     VOCABULARYCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE
     VCBLRY.ORIGINALID = VOCABULARYCR.ID AND VOCABULARYCR.STARTID = VCR.ID AND
     VCBLRY.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VSINPUTDATAIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VSINPUTDATA (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VSINPUTD_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVSINPU_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVSINPUTDATA_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT VSINPUTDATA_CKENDI CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT VSINPUTDATA_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VSINPUTD_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VSINPUTD_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VSINPUTD_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, CONTENT BLOB(52428800), FILENAME
     VARCHAR(255), INPUTTYPE VARCHAR(30), CONSTRAINT VSINPUTD_INPUTKIN FOREIGN
     KEY (INPUTTYPE) REFERENCES IIBADMIN.INPUTKIND, ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER, CONSTRAINT VSINPUTD_OPERATIO FOREIGN KEY (OPERATION)
     REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VSINPUTD_PRJBRANC ON IIBADMIN.VSINPUTDATA (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VSINPUNAMEUNIQ ON IIBADMIN.VSINPUTDATA (OPERATION,
     BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VSINPUUUIDUNIQ ON IIBADMIN.VSINPUTDATA (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.VSINPUTDATADTLS AS SELECT VSNPTDT.ID, VSNPTDT.ORIGINALID,
     VSNPTDT.STARTID, VSNPTDT.ENDID, VSNPTDT.BASELINE, VSNPTDT.TYPE,
     VSNPTDT.NAME, VSNPTDT.UUID, VSNPTDT.RULEPACKAGE, VSNPTDT.DOCUMENTATION,
     VSNPTDT.GRP, VSNPTDT.PROJECT, VSNPTDT.CONTENT, VSNPTDT.FILENAME,
     VSNPTDT.INPUTTYPE, VSNPTDT.ENABLED, VSNPTDT.OPERATION, VCR.VERSDATE AS
     CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON,
     VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.VSINPUTDATA VSNPTDT,
     IIBADMIN.VSINPUTDATA VSINPUTDATACR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION
     VUPDT WHERE VSNPTDT.ORIGINALID = VSINPUTDATACR.ID AND
     VSINPUTDATACR.STARTID = VCR.ID AND VSNPTDT.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VSKPIIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VSKPI (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VSKPI_METAMODEL FOREIGN KEY (TYPE) REFERENCES
     IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT FKVSKPI_STARTV
     FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, ENDID
     INTEGER NOT NULL, CONSTRAINT FKVSKPI_ENDV FOREIGN KEY (ENDID) REFERENCES
     IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT VSKPI_CKENDIDSTART CHECK
     (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL, BASELINE INTEGER NOT
     NULL, CONSTRAINT VSKPI_BSLN FOREIGN KEY (BASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT VSKPI_BRSTUDIO FOREIGN KEY
     (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, NAME VARCHAR(255)
     NOT NULL, UUID VARCHAR(46) NOT NULL, RULEPACKAGE INTEGER, CONSTRAINT
     VSKPI_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION CLOB(52428800), GRP
     VARCHAR(100), PROJECT INTEGER, CONSTRAINT VSKPI_RULEPROJECT FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE, MEASURE
     CLOB(52428800), ENABLED CHAR(1) NOT NULL, OPERATION INTEGER, CONSTRAINT
     VSKPI_OPERATION FOREIGN KEY (OPERATION) REFERENCES IIBADMIN.OPERATION ON
     DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VSKPI_PRJBRANCH ON IIBADMIN.VSKPI (PROJECT, BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VSKPINAMEUNIQUE ON IIBADMIN.VSKPI (OPERATION,
     BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VSKPIUUIDUNIQUE ON IIBADMIN.VSKPI (UUID, BASELINE,
     ENDID) ;
CREATE VIEW IIBADMIN.VSKPIDTLS AS SELECT VSKP.ID, VSKP.ORIGINALID,
     VSKP.STARTID, VSKP.ENDID, VSKP.BASELINE, VSKP.TYPE, VSKP.NAME, VSKP.UUID,
     VSKP.RULEPACKAGE, VSKP.DOCUMENTATION, VSKP.GRP, VSKP.PROJECT,
     VSKP.MEASURE, VSKP.ENABLED, VSKP.OPERATION, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME
     AS LASTCHANGEDBY FROM IIBADMIN.VSKPI VSKP, IIBADMIN.VSKPI VSKPICR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VSKP.ORIGINALID =
     VSKPICR.ID AND VSKPICR.STARTID = VCR.ID AND VSKP.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VSMETRICIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VSMETRIC (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VSMETRIC_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVSMETRIC_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVSMETRIC_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     VSMETRIC_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT VSMETRIC_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VSMETRIC_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VSMETRIC_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VSMETRIC_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, DEFAULTVALUE VARCHAR(100), MAPPING
     CLOB(52428800), METRICTYPE VARCHAR(30), CONSTRAINT VSMETRIC_METRICKI
     FOREIGN KEY (METRICTYPE) REFERENCES IIBADMIN.METRICKIND, ENABLED CHAR(1)
     NOT NULL, OPERATION INTEGER, CONSTRAINT VSMETRIC_OPERATION FOREIGN KEY
     (OPERATION) REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VSMETRIC_PRJBRANCH ON IIBADMIN.VSMETRIC (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VSMETRICNAMEUNIQUE ON IIBADMIN.VSMETRIC
     (OPERATION, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VSMETRICUUIDUNIQUE ON IIBADMIN.VSMETRIC (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.VSMETRICDTLS AS SELECT VSMTRC.ID, VSMTRC.ORIGINALID,
     VSMTRC.STARTID, VSMTRC.ENDID, VSMTRC.BASELINE, VSMTRC.TYPE, VSMTRC.NAME,
     VSMTRC.UUID, VSMTRC.RULEPACKAGE, VSMTRC.DOCUMENTATION, VSMTRC.GRP,
     VSMTRC.PROJECT, VSMTRC.DEFAULTVALUE, VSMTRC.MAPPING, VSMTRC.METRICTYPE,
     VSMTRC.ENABLED, VSMTRC.OPERATION, VCR.VERSDATE AS CREATEDON, VCR.USERNAME
     AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.VSMETRIC VSMTRC, IIBADMIN.VSMETRIC VSMETRICCR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VSMTRC.ORIGINALID =
     VSMETRICCR.ID AND VSMETRICCR.STARTID = VCR.ID AND VSMTRC.STARTID =
     VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VSMODELIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VSMODEL (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VSMODEL_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVSMODEL_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVSMODEL_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     VSMODEL_CKENDIDSTA CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT VSMODEL_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VSMODEL_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE
     CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VSMODEL_RULEPACK FOREIGN KEY (RULEPACKAGE)
     REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION
     CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER, CONSTRAINT
     VSMODEL_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON
     DELETE CASCADE, REPORTCONFIGURATION CLOB(52428800), ENABLED CHAR(1) NOT
     NULL, OPERATION INTEGER, CONSTRAINT VSMODEL_OPERATION FOREIGN KEY
     (OPERATION) REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VSMODEL_PRJBRANCH ON IIBADMIN.VSMODEL (PROJECT, BASELINE)
     ;
CREATE UNIQUE INDEX IIBADMIN.VSMODELNAMEUNIQUE ON IIBADMIN.VSMODEL (OPERATION,
     BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VSMODELUUIDUNIQUE ON IIBADMIN.VSMODEL (UUID,
     BASELINE, ENDID) ;
CREATE SEQUENCE IIBADMIN.VSCONFIGIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VSCONFIG (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VSCONFIG_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVSCONFIG_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVSCONFIG_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     VSCONFIG_CKENDIDST CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT VSCONFIG_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VSCONFIG_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON
     DELETE CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VSCONFIG_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VSCONFIG_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, DATAPARAMS CLOB(52428800),
     INPUTDATA INTEGER, CONSTRAINT VSCONFIG_VSINPUTD FOREIGN KEY (INPUTDATA)
     REFERENCES IIBADMIN.VSINPUTDATA ON DELETE CASCADE, REPORTNAME
     VARCHAR(255), RUNBASELINE INTEGER, CONSTRAINT RUNSCBSLNREF FOREIGN KEY
     (RUNBASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, SERVER
     INTEGER, CONSTRAINT VSCONFIG_SERVER FOREIGN KEY (SERVER) REFERENCES
     IIBADMIN.SERVER ON DELETE CASCADE, SIMULATIONMODEL INTEGER, CONSTRAINT
     VSCONFIG_VSMODEL FOREIGN KEY (SIMULATIONMODEL) REFERENCES IIBADMIN.VSMODEL
     ON DELETE CASCADE, ENABLED CHAR(1) NOT NULL, OPERATION INTEGER, CONSTRAINT
     VSCONFIG_OPERATION FOREIGN KEY (OPERATION) REFERENCES IIBADMIN.OPERATION
     ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VSCONFIG_PRJBRANCH ON IIBADMIN.VSCONFIG (PROJECT,
     BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VSCONFIGNAMEUNIQUE ON IIBADMIN.VSCONFIG
     (OPERATION, BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VSCONFIGUUIDUNIQUE ON IIBADMIN.VSCONFIG (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.VSCONFIGDTLS AS SELECT VSCNFG.ID, VSCNFG.ORIGINALID,
     VSCNFG.STARTID, VSCNFG.ENDID, VSCNFG.BASELINE, VSCNFG.TYPE, VSCNFG.NAME,
     VSCNFG.UUID, VSCNFG.RULEPACKAGE, VSCNFG.DOCUMENTATION, VSCNFG.GRP,
     VSCNFG.PROJECT, VSCNFG.DATAPARAMS, VSCNFG.INPUTDATA, VSCNFG.REPORTNAME,
     VSCNFG.RUNBASELINE, VSCNFG.SERVER, VSCNFG.SIMULATIONMODEL, VSCNFG.ENABLED,
     VSCNFG.OPERATION, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY,
     VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM
     IIBADMIN.VSCONFIG VSCNFG, IIBADMIN.VSCONFIG VSCONFIGCR, IIBADMIN.VERSION
     VCR, IIBADMIN.VERSION VUPDT WHERE VSCNFG.ORIGINALID = VSCONFIGCR.ID AND
     VSCONFIGCR.STARTID = VCR.ID AND VSCNFG.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.VSMODELDTLS AS SELECT VSMDL.ID, VSMDL.ORIGINALID,
     VSMDL.STARTID, VSMDL.ENDID, VSMDL.BASELINE, VSMDL.TYPE, VSMDL.NAME,
     VSMDL.UUID, VSMDL.RULEPACKAGE, VSMDL.DOCUMENTATION, VSMDL.GRP,
     VSMDL.PROJECT, VSMDL.REPORTCONFIGURATION, VSMDL.ENABLED, VSMDL.OPERATION,
     VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS
     LASTCHANGEDON, VUPDT.USERNAME AS LASTCHANGEDBY FROM IIBADMIN.VSMODEL
     VSMDL, IIBADMIN.VSMODEL VSMODELCR, IIBADMIN.VERSION VCR, IIBADMIN.VERSION
     VUPDT WHERE VSMDL.ORIGINALID = VSMODELCR.ID AND VSMODELCR.STARTID = VCR.ID
     AND VSMDL.STARTID = VUPDT.ID ;
CREATE SEQUENCE IIBADMIN.VSREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VSREPORT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VSREPORT_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONSTRAINT VSREPORT_BRSTUDIO FOREIGN KEY
     (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, CREATEDBY
     VARCHAR(100), CREATEDON TIMESTAMP, LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT
     NULL, RULEPACKAGE INTEGER, CONSTRAINT VSREPORT_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VSREPORT_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, ERRORSCENARIOCOUNT INTEGER,
     ESTIMATEDSCENARIOCOUNT INTEGER, EXECUTEDSCENARIOCOUNT INTEGER, JOBENDTIME
     TIMESTAMP, JOBID VARCHAR(30), PROGRESS INTEGER, REPORTBASELINE INTEGER NOT
     NULL, CONSTRAINT REPORTSRBSLNREF FOREIGN KEY (REPORTBASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, RESULT CLOB(52428800),
     SIMULATIONCONFIGURATION INTEGER, CONSTRAINT VSREPORT_VSCONFIG FOREIGN KEY
     (SIMULATIONCONFIGURATION) REFERENCES IIBADMIN.VSCONFIG ON DELETE CASCADE,
     STARTDATE TIMESTAMP, STATUS VARCHAR(30), CONSTRAINT VSREPORT_REPORTST
     FOREIGN KEY (STATUS) REFERENCES IIBADMIN.REPORTSTATUSKIND, ENABLED CHAR(1)
     NOT NULL, OPERATION INTEGER, CONSTRAINT VSREPORT_OPERATION FOREIGN KEY
     (OPERATION) REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)  ;
CREATE UNIQUE INDEX IIBADMIN.VSREPORTUUIDUNIQUE ON IIBADMIN.VSREPORT (UUID) ;
CREATE SEQUENCE IIBADMIN.VTREPORTIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTREPORT (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTREPORT_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, CONSTRAINT VTREPORT_BRSTUDIO FOREIGN KEY
     (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, CREATEDBY
     VARCHAR(100), CREATEDON TIMESTAMP, LASTCHANGEDBY VARCHAR(100),
     LASTCHANGEDON TIMESTAMP, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT
     NULL, RULEPACKAGE INTEGER, CONSTRAINT VTREPORT_RULEPACK FOREIGN KEY
     (RULEPACKAGE) REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE,
     DOCUMENTATION CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER,
     CONSTRAINT VTREPORT_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES
     IIBADMIN.RULEPROJECT ON DELETE CASCADE, ARCHIVEERRORS CHAR(1),
     ARCHIVEWARNINGS CHAR(1), ERROR BLOB(52428800), JOBID VARCHAR(255),
     NBERRORS INTEGER NOT NULL, NBEXECUTED INTEGER NOT NULL, NBFAILURES INTEGER
     NOT NULL, NBSCENARIOS INTEGER NOT NULL, OPERATIONID VARCHAR(30) NOT NULL,
     ORIGINALBASELINE INTEGER NOT NULL, CONSTRAINT ORIGINALTRBSLNREF FOREIGN
     KEY (ORIGINALBASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     REPORTBASELINE INTEGER NOT NULL, CONSTRAINT REPORTTRBSLNREF FOREIGN KEY
     (REPORTBASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE,
     SERVERKIND VARCHAR(30), CONSTRAINT VTREPORT_SERVERKI FOREIGN KEY
     (SERVERKIND) REFERENCES IIBADMIN.SERVERKIND, STATUS VARCHAR(30),
     CONSTRAINT VTREPORT_REPORTST FOREIGN KEY (STATUS) REFERENCES
     IIBADMIN.REPORTSTATUSKIND, TESTSUITEID VARCHAR(30), ENABLED CHAR(1) NOT
     NULL, OPERATION INTEGER, CONSTRAINT VTREPORT_OPERATION FOREIGN KEY
     (OPERATION) REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)  ;
CREATE UNIQUE INDEX IIBADMIN.VTREPORTUUIDUNIQUE ON IIBADMIN.VTREPORT (UUID) ;
CREATE SEQUENCE IIBADMIN.VTDETAILIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTDETAIL (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTDETAIL_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, EXECUTIONDETAIL BLOB(52428800), EXECUTIONID
     VARCHAR(255), SCENARIORESULT BLOB(52428800), TESTRESULT BLOB(52428800),
     CONTAINER INTEGER NOT NULL, CONSTRAINT VTDETAIL_VTREPORT FOREIGN KEY
     (CONTAINER) REFERENCES IIBADMIN.VTREPORT ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VTDETAIL_CONTAINER ON IIBADMIN.VTDETAIL (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.VTROINFOIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTROINFO (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTROINFO_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, EXTRACTOR VARCHAR(255), NAME VARCHAR(255)
     NOT NULL, OPERATIONID VARCHAR(30) NOT NULL, RULEFLOWENTRYPOINT
     VARCHAR(255), TARGETPROJECTNAME VARCHAR(255), CONTAINER INTEGER NOT NULL,
     CONSTRAINT VTROINFO_VTREPORT FOREIGN KEY (CONTAINER) REFERENCES
     IIBADMIN.VTREPORT ON DELETE CASCADE)  ;
CREATE UNIQUE INDEX IIBADMIN.VTROINCONTAIUNIQ ON IIBADMIN.VTROINFO (CONTAINER)
     ;
CREATE SEQUENCE IIBADMIN.VTRTSINFOIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTRTSINFO (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTRTSINF_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, COMPARISIONPRECISION INTEGER NOT NULL,
     CREATEIOFILE CHAR(1), NAME VARCHAR(255) NOT NULL, SCENARIOFILENAME
     VARCHAR(255), SERVERNAME VARCHAR(255), SNAPSHOT CHAR(1) NOT NULL,
     TESTSUITEID VARCHAR(30) NOT NULL, VERSION VARCHAR(30) NOT NULL, CONTAINER
     INTEGER NOT NULL, CONSTRAINT VTRTSINFO_VTREPORT FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.VTREPORT ON DELETE CASCADE)  ;
CREATE UNIQUE INDEX IIBADMIN.VTRTSICONTAIUNIQ ON IIBADMIN.VTRTSINFO (CONTAINER)
     ;
CREATE SEQUENCE IIBADMIN.VTSUITEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTSUITE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTSUITE_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVTSUITE_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVTSUITE_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     VTSUITE_CKENDIDSTA CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT VTSUITE_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT
     VTSUITE_BRSTUDIO FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE
     CASCADE, NAME VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL,
     RULEPACKAGE INTEGER, CONSTRAINT VTSUITE_RULEPACK FOREIGN KEY (RULEPACKAGE)
     REFERENCES IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION
     CLOB(52428800), GRP VARCHAR(100), PROJECT INTEGER, CONSTRAINT
     VTSUITE_RULEPROJ FOREIGN KEY (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON
     DELETE CASCADE, CREATEIOFILE CHAR(1), DESCRIPTORFORMAT VARCHAR(30),
     DESCRIPTORXML BLOB(52428800), LASTTESTCASEUPLOADON TIMESTAMP, REPORTNAME
     VARCHAR(255), RUNBASELINE INTEGER, CONSTRAINT RUNTSBSLNREF FOREIGN KEY
     (RUNBASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, SERVERNAME
     VARCHAR(255), ENABLED CHAR(1) NOT NULL, OPERATION INTEGER, CONSTRAINT
     VTSUITE_OPERATION FOREIGN KEY (OPERATION) REFERENCES IIBADMIN.OPERATION ON
     DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VTSUITE_PRJBRANCH ON IIBADMIN.VTSUITE (PROJECT, BASELINE)
     ;
CREATE UNIQUE INDEX IIBADMIN.VTSUITENAMEUNIQUE ON IIBADMIN.VTSUITE (OPERATION,
     BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VTSUITEUUIDUNIQUE ON IIBADMIN.VTSUITE (UUID,
     BASELINE, ENDID) ;
CREATE SEQUENCE IIBADMIN.VTCRESOURCEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTCRESOURCE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTCRESOU_METAMODE FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVTCRES_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVTCRESOURCE_ENDV
     FOREIGN KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE,
     CONSTRAINT VTCRESOURCE_CKENDI CHECK (ENDID >= STARTID), ORIGINALID INTEGER
     NOT NULL, BASELINE INTEGER NOT NULL, CONSTRAINT VTCRESOURCE_BSLN FOREIGN
     KEY (BASELINE) REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, ILRKEY
     VARCHAR(255), NUMBEROFTESTCASES INTEGER, VALUE BLOB(52428800), CONTAINER
     INTEGER NOT NULL, CONSTRAINT VTCRESOU_VTSUITE FOREIGN KEY (CONTAINER)
     REFERENCES IIBADMIN.VTSUITE ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VTCRESOU_CONTAINE ON IIBADMIN.VTCRESOURCE (CONTAINER) ;
CREATE SEQUENCE IIBADMIN.VTCASEIDENTITY ORDER ;
CREATE TABLE IIBADMIN.VTCASE (ID INTEGER NOT NULL, PRIMARY KEY (ID), TYPE
     INTEGER NOT NULL, CONSTRAINT VTCASE_METAMODEL FOREIGN KEY (TYPE)
     REFERENCES IIBADMIN.METAMODEL, STARTID INTEGER NOT NULL, CONSTRAINT
     FKVTCASE_STARTV FOREIGN KEY (STARTID) REFERENCES IIBADMIN.VERSION ON
     DELETE CASCADE, ENDID INTEGER NOT NULL, CONSTRAINT FKVTCASE_ENDV FOREIGN
     KEY (ENDID) REFERENCES IIBADMIN.VERSION ON DELETE CASCADE, CONSTRAINT
     VTCASE_CKENDIDSTAR CHECK (ENDID >= STARTID), ORIGINALID INTEGER NOT NULL,
     BASELINE INTEGER NOT NULL, CONSTRAINT VTCASE_BSLN FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, CONSTRAINT VTCASE_BRSTUDIO
     FOREIGN KEY (UUID) REFERENCES IIBADMIN.BRSTUDIO ON DELETE CASCADE, NAME
     VARCHAR(255) NOT NULL, UUID VARCHAR(46) NOT NULL, RULEPACKAGE INTEGER,
     CONSTRAINT VTCASE_RULEPACKAGE FOREIGN KEY (RULEPACKAGE) REFERENCES
     IIBADMIN.RULEPACKAGE ON DELETE CASCADE, DOCUMENTATION CLOB(52428800), GRP
     VARCHAR(100), PROJECT INTEGER, CONSTRAINT VTCASE_RULEPROJECT FOREIGN KEY
     (PROJECT) REFERENCES IIBADMIN.RULEPROJECT ON DELETE CASCADE, ENTRYNAME
     VARCHAR(255), FORMAT VARCHAR(30), ORIGINALBASELINE INTEGER NOT NULL,
     CONSTRAINT ORIGINALTCBSLNREF FOREIGN KEY (ORIGINALBASELINE) REFERENCES
     IIBADMIN.BASELINE ON DELETE CASCADE, TESTCASERESOURCE INTEGER, CONSTRAINT
     VTCASE_VTCRESOURCE FOREIGN KEY (TESTCASERESOURCE) REFERENCES
     IIBADMIN.VTCRESOURCE ON DELETE CASCADE, ENABLED CHAR(1) NOT NULL,
     OPERATION INTEGER, CONSTRAINT VTCASE_OPERATION FOREIGN KEY (OPERATION)
     REFERENCES IIBADMIN.OPERATION ON DELETE CASCADE)  ;
CREATE INDEX IIBADMIN.VTCASE_PRJBRANCH ON IIBADMIN.VTCASE (PROJECT, BASELINE) ;
CREATE UNIQUE INDEX IIBADMIN.VTCASENAMEUNIQUE ON IIBADMIN.VTCASE (OPERATION,
     BASELINE, ENDID, NAME) ;
CREATE UNIQUE INDEX IIBADMIN.VTCASEUUIDUNIQUE ON IIBADMIN.VTCASE (UUID,
     BASELINE, ENDID) ;
CREATE VIEW IIBADMIN.VTCASEDTLS AS SELECT VTCS.ID, VTCS.ORIGINALID,
     VTCS.STARTID, VTCS.ENDID, VTCS.BASELINE, VTCS.TYPE, VTCS.NAME, VTCS.UUID,
     VTCS.RULEPACKAGE, VTCS.DOCUMENTATION, VTCS.GRP, VTCS.PROJECT,
     VTCS.ENTRYNAME, VTCS.FORMAT, VTCS.ORIGINALBASELINE, VTCS.TESTCASERESOURCE,
     VTCS.ENABLED, VTCS.OPERATION, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.VTCASE VTCS, IIBADMIN.VTCASE VTCASECR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VTCS.ORIGINALID =
     VTCASECR.ID AND VTCASECR.STARTID = VCR.ID AND VTCS.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.VTSUITEAGGRGTD AS SELECT VTST.ID, VTST.ORIGINALID,
     VTST.STARTID, VTST.ENDID, VTST.TYPE, VTST.BASELINE, VTST.NAME, VTST.UUID,
     VTST.RULEPACKAGE, VTST.DOCUMENTATION, VTST.GRP, VTST.PROJECT,
     VTST.CREATEIOFILE, VTST.DESCRIPTORFORMAT, VTST.DESCRIPTORXML,
     VTST.LASTTESTCASEUPLOADON, VTST.REPORTNAME, VTST.RUNBASELINE,
     VTST.SERVERNAME, VTST.ENABLED, VTST.OPERATION, VTCRSRC.ID AS
     VTCRESOURCE_ID, VTCRSRC.ORIGINALID AS VTCRESOURCE_ORIGINALID,
     VTCRSRC.STARTID AS VTCRESOURCE_STARTID, VTCRSRC.ENDID AS
     VTCRESOURCE_ENDID, VTCRSRC.BASELINE AS VTCRESOURCE_BASELINE, VTCRSRC.TYPE
     AS VTCRESOURCE_TYPE, VTCRSRC.ILRKEY AS VTCRESOURCE_ILRKEY,
     VTCRSRC.NUMBEROFTESTCASES AS VTCRESOURCE_NUMBEROFTESTCASES, VTCRSRC.VALUE
     AS VTCRESOURCE_VALUE, VCR.VERSDATE AS CREATEDON, VCR.USERNAME AS
     CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME AS
     LASTCHANGEDBY FROM IIBADMIN.VTSUITE VTST LEFT OUTER JOIN
     IIBADMIN.VTCRESOURCE VTCRSRC ON VTST.ORIGINALID = VTCRSRC.CONTAINER AND
     VTST.BASELINE = VTCRSRC.BASELINE AND VTCRSRC.STARTID <= VTST.STARTID AND
     VTST.ENDID <= VTCRSRC.ENDID, IIBADMIN.VTSUITE VTSUITECR, IIBADMIN.VERSION
     VCR, IIBADMIN.VERSION VUPDT WHERE VTST.ORIGINALID = VTSUITECR.ID AND
     VTSUITECR.STARTID = VCR.ID AND VTST.STARTID = VUPDT.ID ;
CREATE VIEW IIBADMIN.VTSUITEDTLS AS SELECT VTST.ID, VTST.ORIGINALID,
     VTST.STARTID, VTST.ENDID, VTST.BASELINE, VTST.TYPE, VTST.NAME, VTST.UUID,
     VTST.RULEPACKAGE, VTST.DOCUMENTATION, VTST.GRP, VTST.PROJECT,
     VTST.CREATEIOFILE, VTST.DESCRIPTORFORMAT, VTST.DESCRIPTORXML,
     VTST.LASTTESTCASEUPLOADON, VTST.REPORTNAME, VTST.RUNBASELINE,
     VTST.SERVERNAME, VTST.ENABLED, VTST.OPERATION, VCR.VERSDATE AS CREATEDON,
     VCR.USERNAME AS CREATEDBY, VUPDT.VERSDATE AS LASTCHANGEDON, VUPDT.USERNAME
     AS LASTCHANGEDBY FROM IIBADMIN.VTSUITE VTST, IIBADMIN.VTSUITE VTSUITECR,
     IIBADMIN.VERSION VCR, IIBADMIN.VERSION VUPDT WHERE VTST.ORIGINALID =
     VTSUITECR.ID AND VTSUITECR.STARTID = VCR.ID AND VTST.STARTID = VUPDT.ID ;
CREATE TABLE IIBADMIN.RPLFTRGT (ID INTEGER NOT NULL, CONSTRAINT
     RPLFTRGT_RULEPACK FOREIGN KEY (ID) REFERENCES IIBADMIN.RULEPACKAGE ON
     DELETE CASCADE, LFT INTEGER NOT NULL, RGT INTEGER NOT NULL, BASELINE
     INTEGER NOT NULL, CONSTRAINT RPLFTRGT_BASELINE FOREIGN KEY (BASELINE)
     REFERENCES IIBADMIN.BASELINE ON DELETE CASCADE, PRIMARY KEY (ID,
     BASELINE))  ;
CREATE INDEX IIBADMIN.FOLDERLFTRGTIDX ON IIBADMIN.RPLFTRGT (BASELINE, LFT, RGT)
     ;
